<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>zdepth::Pack12 (33 samples, 0.06%)</title><rect x="681.7" y="373" width="0.7" height="15.0" fill="rgb(215,213,51)" rx="2" ry="2" />
<text  x="684.72" y="383.5" ></text>
</g>
<g >
<title>ZSTD_decodeSequence (456 samples, 0.77%)</title><rect x="1169.9" y="229" width="9.0" height="15.0" fill="rgb(228,96,14)" rx="2" ry="2" />
<text  x="1172.86" y="239.5" ></text>
</g>
<g >
<title>BIT_flushBits (141 samples, 0.24%)</title><rect x="882.6" y="85" width="2.8" height="15.0" fill="rgb(243,105,52)" rx="2" ry="2" />
<text  x="885.58" y="95.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%)</title><rect x="1164.5" y="213" width="0.2" height="15.0" fill="rgb(241,4,31)" rx="2" ry="2" />
<text  x="1167.51" y="223.5" ></text>
</g>
<g >
<title>ZSTD_LLcode (13 samples, 0.02%)</title><rect x="901.8" y="197" width="0.3" height="15.0" fill="rgb(251,204,6)" rx="2" ry="2" />
<text  x="904.81" y="207.5" ></text>
</g>
<g >
<title>perf_event_exec (6 samples, 0.01%)</title><rect x="10.0" y="373" width="0.1" height="15.0" fill="rgb(233,95,16)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>zdepth::DepthCompressor::CompressImage (633 samples, 1.06%)</title><rect x="546.6" y="357" width="12.5" height="15.0" fill="rgb(236,116,17)" rx="2" ry="2" />
<text  x="549.60" y="367.5" ></text>
</g>
<g >
<title>BIT_skipBits (11 samples, 0.02%)</title><rect x="1156.2" y="213" width="0.2" height="15.0" fill="rgb(220,116,24)" rx="2" ry="2" />
<text  x="1159.23" y="223.5" ></text>
</g>
<g >
<title>ZSTD_compressBlock_fast_generic (3,313 samples, 5.56%)</title><rect x="800.1" y="213" width="65.6" height="15.0" fill="rgb(233,173,17)" rx="2" ry="2" />
<text  x="803.13" y="223.5" >ZSTD_co..</text>
</g>
<g >
<title>zdepth::DepthCompressor::CompressImage (466 samples, 0.78%)</title><rect x="537.4" y="325" width="9.2" height="15.0" fill="rgb(222,220,15)" rx="2" ry="2" />
<text  x="540.37" y="335.5" ></text>
</g>
<g >
<title>all (59,576 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(244,78,54)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>memset (63 samples, 0.11%)</title><rect x="798.7" y="261" width="1.2" height="15.0" fill="rgb(249,166,19)" rx="2" ry="2" />
<text  x="801.68" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (31 samples, 0.05%)</title><rect x="902.8" y="261" width="0.7" height="15.0" fill="rgb(227,219,17)" rx="2" ry="2" />
<text  x="905.84" y="271.5" ></text>
</g>
<g >
<title>ZSTD_updateFseState (161 samples, 0.27%)</title><rect x="1175.7" y="213" width="3.1" height="15.0" fill="rgb(244,181,49)" rx="2" ry="2" />
<text  x="1178.66" y="223.5" ></text>
</g>
<g >
<title>MEM_write64 (21 samples, 0.04%)</title><rect x="885.0" y="37" width="0.4" height="15.0" fill="rgb(211,96,18)" rx="2" ry="2" />
<text  x="887.96" y="47.5" ></text>
</g>
<g >
<title>ZSTD_compressBegin_internal (75 samples, 0.13%)</title><rect x="798.6" y="309" width="1.4" height="15.0" fill="rgb(250,95,36)" rx="2" ry="2" />
<text  x="801.56" y="319.5" ></text>
</g>
<g >
<title>zdepth::AzureKinectDequantizeDepth (16 samples, 0.03%)</title><rect x="1145.7" y="357" width="0.3" height="15.0" fill="rgb(234,130,34)" rx="2" ry="2" />
<text  x="1148.65" y="367.5" ></text>
</g>
<g >
<title>ZSTD_compressSequences_internal (1,840 samples, 3.09%)</title><rect x="865.9" y="229" width="36.4" height="15.0" fill="rgb(247,6,29)" rx="2" ry="2" />
<text  x="868.86" y="239.5" >ZST..</text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (24 samples, 0.04%)</title><rect x="1189.3" y="357" width="0.5" height="15.0" fill="rgb(235,94,40)" rx="2" ry="2" />
<text  x="1192.29" y="367.5" ></text>
</g>
<g >
<title>HUF_buildCTable_wksp (311 samples, 0.52%)</title><rect x="876.0" y="165" width="6.2" height="15.0" fill="rgb(230,217,27)" rx="2" ry="2" />
<text  x="879.05" y="175.5" ></text>
</g>
<g >
<title>zdepth::AzureKinectQuantizeDepth (18 samples, 0.03%)</title><rect x="346.8" y="389" width="0.3" height="15.0" fill="rgb(226,32,12)" rx="2" ry="2" />
<text  x="349.77" y="399.5" ></text>
</g>
<g >
<title>BIT_readBits (6 samples, 0.01%)</title><rect x="1163.1" y="133" width="0.1" height="15.0" fill="rgb(206,181,16)" rx="2" ry="2" />
<text  x="1166.10" y="143.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (6 samples, 0.01%)</title><rect x="659.9" y="341" width="0.2" height="15.0" fill="rgb(238,209,54)" rx="2" ry="2" />
<text  x="662.93" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="10.0" y="485" width="0.1" height="15.0" fill="rgb(205,8,6)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>ZSTD_copy8 (61 samples, 0.10%)</title><rect x="864.5" y="165" width="1.2" height="15.0" fill="rgb(219,50,53)" rx="2" ry="2" />
<text  x="867.50" y="175.5" ></text>
</g>
<g >
<title>?? (24 samples, 0.04%)</title><rect x="1189.3" y="277" width="0.5" height="15.0" fill="rgb(221,124,52)" rx="2" ry="2" />
<text  x="1192.29" y="287.5" ></text>
</g>
<g >
<title>ZSTD_compress_advanced_internal (5,240 samples, 8.80%)</title><rect x="798.6" y="325" width="103.7" height="15.0" fill="rgb(254,16,15)" rx="2" ry="2" />
<text  x="801.56" y="335.5" >ZSTD_compres..</text>
</g>
<g >
<title>?? (1,099 samples, 1.84%)</title><rect x="537.4" y="373" width="21.7" height="15.0" fill="rgb(233,29,35)" rx="2" ry="2" />
<text  x="540.37" y="383.5" >??</text>
</g>
<g >
<title>ctx_resched (6 samples, 0.01%)</title><rect x="10.0" y="357" width="0.1" height="15.0" fill="rgb(243,57,34)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>FSE_decompress_wksp (17 samples, 0.03%)</title><rect x="1162.9" y="197" width="0.4" height="15.0" fill="rgb(227,201,33)" rx="2" ry="2" />
<text  x="1165.94" y="207.5" ></text>
</g>
<g >
<title>HUF_compress4X_repeat (1,046 samples, 1.76%)</title><rect x="872.1" y="197" width="20.7" height="15.0" fill="rgb(244,166,9)" rx="2" ry="2" />
<text  x="875.10" y="207.5" ></text>
</g>
<g >
<title>ZSTD_buildSeqStore (3,319 samples, 5.57%)</title><rect x="800.1" y="245" width="65.7" height="15.0" fill="rgb(227,53,48)" rx="2" ry="2" />
<text  x="803.11" y="255.5" >ZSTD_bu..</text>
</g>
<g >
<title>zdepth::DepthCompressor::DecompressImage (602 samples, 1.01%)</title><rect x="1039.0" y="373" width="11.9" height="15.0" fill="rgb(220,122,11)" rx="2" ry="2" />
<text  x="1041.95" y="383.5" ></text>
</g>
<g >
<title>memcpy (35 samples, 0.06%)</title><rect x="863.8" y="149" width="0.7" height="15.0" fill="rgb(206,95,6)" rx="2" ry="2" />
<text  x="866.80" y="159.5" ></text>
</g>
<g >
<title>BIT_readBits (81 samples, 0.14%)</title><rect x="1177.2" y="197" width="1.6" height="15.0" fill="rgb(250,219,8)" rx="2" ry="2" />
<text  x="1180.24" y="207.5" ></text>
</g>
<g >
<title>HUF_decompress4X2_DCtx_wksp_bmi2 (157 samples, 0.26%)</title><rect x="1160.2" y="245" width="3.1" height="15.0" fill="rgb(246,95,7)" rx="2" ry="2" />
<text  x="1163.17" y="255.5" ></text>
</g>
<g >
<title>zdepth::DequantizeDepthImage (83 samples, 0.14%)</title><rect x="10.2" y="469" width="1.6" height="15.0" fill="rgb(242,215,30)" rx="2" ry="2" />
<text  x="13.18" y="479.5" ></text>
</g>
<g >
<title>ZSTD_hashPtr (376 samples, 0.63%)</title><rect x="854.2" y="197" width="7.4" height="15.0" fill="rgb(228,162,32)" rx="2" ry="2" />
<text  x="857.20" y="207.5" ></text>
</g>
<g >
<title>HUF_decompress4X2_usingDTable_internal_bmi2 (299 samples, 0.50%)</title><rect x="1151.5" y="261" width="5.9" height="15.0" fill="rgb(254,118,45)" rx="2" ry="2" />
<text  x="1154.50" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="677.5" y="357" width="0.2" height="15.0" fill="rgb(240,30,48)" rx="2" ry="2" />
<text  x="680.52" y="367.5" ></text>
</g>
<g >
<title>HUF_readDTableX1_wksp (137 samples, 0.23%)</title><rect x="1157.5" y="229" width="2.7" height="15.0" fill="rgb(210,178,9)" rx="2" ry="2" />
<text  x="1160.46" y="239.5" ></text>
</g>
<g >
<title>memset (10 samples, 0.02%)</title><rect x="1164.5" y="229" width="0.2" height="15.0" fill="rgb(211,3,50)" rx="2" ry="2" />
<text  x="1167.49" y="239.5" ></text>
</g>
<g >
<title>[[heap]] (86 samples, 0.14%)</title><rect x="10.1" y="485" width="1.7" height="15.0" fill="rgb(248,80,21)" rx="2" ry="2" />
<text  x="13.12" y="495.5" ></text>
</g>
<g >
<title>[[vdso]] (6 samples, 0.01%)</title><rect x="158.8" y="357" width="0.1" height="15.0" fill="rgb(229,67,4)" rx="2" ry="2" />
<text  x="161.81" y="367.5" ></text>
</g>
<g >
<title>?? (31 samples, 0.05%)</title><rect x="902.8" y="325" width="0.7" height="15.0" fill="rgb(250,51,48)" rx="2" ry="2" />
<text  x="905.84" y="335.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (6 samples, 0.01%)</title><rect x="659.9" y="357" width="0.2" height="15.0" fill="rgb(225,60,25)" rx="2" ry="2" />
<text  x="662.93" y="367.5" ></text>
</g>
<g >
<title>zdepth::ZstdCompress (5,299 samples, 8.89%)</title><rect x="798.5" y="389" width="105.0" height="15.0" fill="rgb(254,109,18)" rx="2" ry="2" />
<text  x="801.50" y="399.5" >zdepth::Zstd..</text>
</g>
<g >
<title>__GI___clock_gettime (8 samples, 0.01%)</title><rect x="158.8" y="389" width="0.1" height="15.0" fill="rgb(252,22,13)" rx="2" ry="2" />
<text  x="161.77" y="399.5" ></text>
</g>
<g >
<title>BIT_reloadDStream (6 samples, 0.01%)</title><rect x="1159.8" y="149" width="0.1" height="15.0" fill="rgb(253,174,33)" rx="2" ry="2" />
<text  x="1162.79" y="159.5" ></text>
</g>
<g >
<title>zdepth::Pack12 (237 samples, 0.40%)</title><rect x="677.7" y="389" width="4.7" height="15.0" fill="rgb(209,42,50)" rx="2" ry="2" />
<text  x="680.68" y="399.5" ></text>
</g>
<g >
<title>HUF_fillDTableX2 (124 samples, 0.21%)</title><rect x="1160.4" y="213" width="2.4" height="15.0" fill="rgb(249,105,1)" rx="2" ry="2" />
<text  x="1163.39" y="223.5" ></text>
</g>
<g >
<title>ZSTD_decompressFrame (2,054 samples, 3.45%)</title><rect x="1148.5" y="309" width="40.7" height="15.0" fill="rgb(231,87,45)" rx="2" ry="2" />
<text  x="1151.52" y="319.5" >ZST..</text>
</g>
<g >
<title>__libc_start_main (54,356 samples, 91.24%)</title><rect x="113.2" y="469" width="1076.6" height="15.0" fill="rgb(249,78,3)" rx="2" ry="2" />
<text  x="116.15" y="479.5" >__libc_start_main</text>
</g>
<g >
<title>__x64_sys_execve (6 samples, 0.01%)</title><rect x="10.0" y="453" width="0.1" height="15.0" fill="rgb(218,131,53)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>zdepth::DepthCompressor::Compress (28,088 samples, 47.15%)</title><rect x="347.1" y="405" width="556.4" height="15.0" fill="rgb(214,122,10)" rx="2" ry="2" />
<text  x="350.13" y="415.5" >zdepth::DepthCompressor::Compress</text>
</g>
<g >
<title>HUF_decompress4X1_usingDTable_internal_body (143 samples, 0.24%)</title><rect x="1148.7" y="245" width="2.8" height="15.0" fill="rgb(237,135,3)" rx="2" ry="2" />
<text  x="1151.66" y="255.5" ></text>
</g>
<g >
<title>zdepth::ZstdDecompress (2,092 samples, 3.51%)</title><rect x="1148.3" y="389" width="41.5" height="15.0" fill="rgb(245,68,0)" rx="2" ry="2" />
<text  x="1151.33" y="399.5" >zde..</text>
</g>
<g >
<title>__memset_avx2_erms (63 samples, 0.11%)</title><rect x="798.7" y="245" width="1.2" height="15.0" fill="rgb(222,105,4)" rx="2" ry="2" />
<text  x="801.68" y="255.5" ></text>
</g>
<g >
<title>HIST_count_simple (19 samples, 0.03%)</title><rect x="892.4" y="133" width="0.4" height="15.0" fill="rgb(240,123,45)" rx="2" ry="2" />
<text  x="895.39" y="143.5" ></text>
</g>
<g >
<title>zdepth::AzureKinectQuantizeDepth (1,377 samples, 2.31%)</title><rect x="23.5" y="469" width="27.3" height="15.0" fill="rgb(212,161,25)" rx="2" ry="2" />
<text  x="26.49" y="479.5" >z..</text>
</g>
<g >
<title>zdepth::DepthCompressor::DecodeZeroes (669 samples, 1.12%)</title><rect x="903.5" y="389" width="13.2" height="15.0" fill="rgb(212,88,48)" rx="2" ry="2" />
<text  x="906.46" y="399.5" ></text>
</g>
<g >
<title>HUF_decodeSymbolX1 (56 samples, 0.09%)</title><rect x="1150.4" y="229" width="1.1" height="15.0" fill="rgb(233,131,18)" rx="2" ry="2" />
<text  x="1153.39" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6 samples, 0.01%)</title><rect x="559.1" y="341" width="0.2" height="15.0" fill="rgb(246,215,35)" rx="2" ry="2" />
<text  x="562.14" y="351.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (6 samples, 0.01%)</title><rect x="158.8" y="373" width="0.1" height="15.0" fill="rgb(220,199,40)" rx="2" ry="2" />
<text  x="161.81" y="383.5" ></text>
</g>
<g >
<title>zdepth::DepthCompressor::Decompress (14,455 samples, 24.26%)</title><rect x="903.5" y="405" width="286.3" height="15.0" fill="rgb(206,93,2)" rx="2" ry="2" />
<text  x="906.46" y="415.5" >zdepth::DepthCompressor::Decompress</text>
</g>
<g >
<title>FSE_writeNCount_generic (44 samples, 0.07%)</title><rect x="871.2" y="181" width="0.9" height="15.0" fill="rgb(249,100,40)" rx="2" ry="2" />
<text  x="874.21" y="191.5" ></text>
</g>
<g >
<title>search_binary_handler (6 samples, 0.01%)</title><rect x="10.0" y="421" width="0.1" height="15.0" fill="rgb(234,156,31)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>HIST_countFast_wksp (44 samples, 0.07%)</title><rect x="866.0" y="197" width="0.8" height="15.0" fill="rgb(245,33,15)" rx="2" ry="2" />
<text  x="868.96" y="207.5" ></text>
</g>
<g >
<title>?? (24 samples, 0.04%)</title><rect x="1189.3" y="293" width="0.5" height="15.0" fill="rgb(240,162,48)" rx="2" ry="2" />
<text  x="1192.29" y="303.5" ></text>
</g>
<g >
<title>memcpy (7 samples, 0.01%)</title><rect x="677.5" y="373" width="0.2" height="15.0" fill="rgb(238,150,1)" rx="2" ry="2" />
<text  x="680.52" y="383.5" ></text>
</g>
<g >
<title>ZSTD_NbCommonBytes (45 samples, 0.08%)</title><rect x="853.3" y="181" width="0.9" height="15.0" fill="rgb(239,182,25)" rx="2" ry="2" />
<text  x="856.31" y="191.5" ></text>
</g>
<g >
<title>?? (466 samples, 0.78%)</title><rect x="537.4" y="341" width="9.2" height="15.0" fill="rgb(219,22,48)" rx="2" ry="2" />
<text  x="540.37" y="351.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (6 samples, 0.01%)</title><rect x="10.0" y="325" width="0.1" height="15.0" fill="rgb(248,161,41)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>HUF_encodeSymbol (280 samples, 0.47%)</title><rect x="885.4" y="85" width="5.6" height="15.0" fill="rgb(246,164,45)" rx="2" ry="2" />
<text  x="888.41" y="95.5" ></text>
</g>
<g >
<title>HUF_decompress4X1_DCtx_wksp_bmi2 (137 samples, 0.23%)</title><rect x="1157.5" y="245" width="2.7" height="15.0" fill="rgb(238,155,18)" rx="2" ry="2" />
<text  x="1160.46" y="255.5" ></text>
</g>
<g >
<title>memcpy (54 samples, 0.09%)</title><rect x="1187.8" y="181" width="1.1" height="15.0" fill="rgb(216,184,40)" rx="2" ry="2" />
<text  x="1190.80" y="191.5" ></text>
</g>
<g >
<title>HUF_compress1X_usingCTable_internal_body (436 samples, 0.73%)</title><rect x="882.3" y="101" width="8.7" height="15.0" fill="rgb(232,197,51)" rx="2" ry="2" />
<text  x="885.32" y="111.5" ></text>
</g>
<g >
<title>FSE_normalizeCount (35 samples, 0.06%)</title><rect x="870.5" y="197" width="0.7" height="15.0" fill="rgb(222,20,4)" rx="2" ry="2" />
<text  x="873.52" y="207.5" ></text>
</g>
<g >
<title>[[stack]] (1,966 samples, 3.30%)</title><rect x="11.8" y="485" width="39.0" height="15.0" fill="rgb(235,64,3)" rx="2" ry="2" />
<text  x="14.82" y="495.5" >[[s..</text>
</g>
<g >
<title>memcpy (22 samples, 0.04%)</title><rect x="1154.4" y="197" width="0.4" height="15.0" fill="rgb(208,12,22)" rx="2" ry="2" />
<text  x="1157.37" y="207.5" ></text>
</g>
<g >
<title>Zdepth_compress (54,354 samples, 91.23%)</title><rect x="113.2" y="421" width="1076.6" height="15.0" fill="rgb(226,166,27)" rx="2" ry="2" />
<text  x="116.19" y="431.5" >Zdepth_compress</text>
</g>
<g >
<title>ZSTD_decompressSequences_body (1,107 samples, 1.86%)</title><rect x="1167.3" y="245" width="21.9" height="15.0" fill="rgb(228,65,27)" rx="2" ry="2" />
<text  x="1170.26" y="255.5" >Z..</text>
</g>
<g >
<title>memset (6 samples, 0.01%)</title><rect x="867.8" y="181" width="0.1" height="15.0" fill="rgb(223,163,7)" rx="2" ry="2" />
<text  x="870.77" y="191.5" ></text>
</g>
<g >
<title>ZSTD_compressContinue_internal (5,165 samples, 8.67%)</title><rect x="800.0" y="293" width="102.3" height="15.0" fill="rgb(225,142,48)" rx="2" ry="2" />
<text  x="803.05" y="303.5" >ZSTD_compres..</text>
</g>
<g >
<title>ZSTD_decompressMultiFrame (2,055 samples, 3.45%)</title><rect x="1148.5" y="325" width="40.7" height="15.0" fill="rgb(211,166,4)" rx="2" ry="2" />
<text  x="1151.51" y="335.5" >ZST..</text>
</g>
<g >
<title>HUF_decodeSymbolX2 (30 samples, 0.05%)</title><rect x="1154.2" y="213" width="0.6" height="15.0" fill="rgb(223,159,51)" rx="2" ry="2" />
<text  x="1157.21" y="223.5" ></text>
</g>
<g >
<title>BIT_skipBits (20 samples, 0.03%)</title><rect x="1178.5" y="181" width="0.3" height="15.0" fill="rgb(239,11,50)" rx="2" ry="2" />
<text  x="1181.45" y="191.5" ></text>
</g>
<g >
<title>HUF_decompress4X_hufOnly_wksp_bmi2 (299 samples, 0.50%)</title><rect x="1157.4" y="261" width="5.9" height="15.0" fill="rgb(206,226,44)" rx="2" ry="2" />
<text  x="1160.42" y="271.5" ></text>
</g>
<g >
<title>HUF_writeCTable (91 samples, 0.15%)</title><rect x="891.0" y="165" width="1.8" height="15.0" fill="rgb(234,77,27)" rx="2" ry="2" />
<text  x="893.96" y="175.5" ></text>
</g>
<g >
<title>FSE_writeNCount (44 samples, 0.07%)</title><rect x="871.2" y="197" width="0.9" height="15.0" fill="rgb(234,41,9)" rx="2" ry="2" />
<text  x="874.21" y="207.5" ></text>
</g>
<g >
<title>ZSTD_encodeSequences_body (403 samples, 0.68%)</title><rect x="892.9" y="197" width="8.0" height="15.0" fill="rgb(217,124,53)" rx="2" ry="2" />
<text  x="895.90" y="207.5" ></text>
</g>
<g >
<title>ZSTD_reset_matchState (64 samples, 0.11%)</title><rect x="798.7" y="277" width="1.2" height="15.0" fill="rgb(250,162,43)" rx="2" ry="2" />
<text  x="801.66" y="287.5" ></text>
</g>
<g >
<title>FSE_writeNCount_generic (7 samples, 0.01%)</title><rect x="892.2" y="117" width="0.2" height="15.0" fill="rgb(222,184,16)" rx="2" ry="2" />
<text  x="895.25" y="127.5" ></text>
</g>
<g >
<title>memcpy (162 samples, 0.27%)</title><rect x="1184.3" y="181" width="3.2" height="15.0" fill="rgb(250,8,53)" rx="2" ry="2" />
<text  x="1187.34" y="191.5" ></text>
</g>
<g >
<title>thermal_interrupt (9 samples, 0.02%)</title><rect x="1038.8" y="373" width="0.2" height="15.0" fill="rgb(206,77,22)" rx="2" ry="2" />
<text  x="1041.78" y="383.5" ></text>
</g>
<g >
<title>BIT_reloadDStream (109 samples, 0.18%)</title><rect x="1167.7" y="229" width="2.2" height="15.0" fill="rgb(237,118,53)" rx="2" ry="2" />
<text  x="1170.70" y="239.5" ></text>
</g>
<g >
<title>BIT_addBits (34 samples, 0.06%)</title><rect x="895.7" y="181" width="0.7" height="15.0" fill="rgb(227,3,48)" rx="2" ry="2" />
<text  x="898.71" y="191.5" ></text>
</g>
<g >
<title>BIT_skipBits (16 samples, 0.03%)</title><rect x="1175.3" y="197" width="0.4" height="15.0" fill="rgb(227,118,51)" rx="2" ry="2" />
<text  x="1178.34" y="207.5" ></text>
</g>
<g >
<title>FSE_decompress_usingDTable (19 samples, 0.03%)</title><rect x="1159.8" y="181" width="0.3" height="15.0" fill="rgb(244,224,0)" rx="2" ry="2" />
<text  x="1162.76" y="191.5" ></text>
</g>
<g >
<title>ZSTD_cpuid (7 samples, 0.01%)</title><rect x="1148.3" y="309" width="0.2" height="15.0" fill="rgb(238,219,20)" rx="2" ry="2" />
<text  x="1151.33" y="319.5" ></text>
</g>
<g >
<title>zdepth::DepthCompressor::CompressImage (15,793 samples, 26.51%)</title><rect x="347.4" y="389" width="312.8" height="15.0" fill="rgb(236,213,39)" rx="2" ry="2" />
<text  x="350.37" y="399.5" >zdepth::DepthCompressor::CompressImage</text>
</g>
<g >
<title>ZSTD_compress_frameChunk (5,162 samples, 8.66%)</title><rect x="800.1" y="277" width="102.2" height="15.0" fill="rgb(220,167,6)" rx="2" ry="2" />
<text  x="803.07" y="287.5" >ZSTD_compres..</text>
</g>
<g >
<title>ZSTD_decompressSequences (1,109 samples, 1.86%)</title><rect x="1167.2" y="277" width="22.0" height="15.0" fill="rgb(226,27,25)" rx="2" ry="2" />
<text  x="1170.22" y="287.5" >Z..</text>
</g>
<g >
<title>BIT_addBits (87 samples, 0.15%)</title><rect x="899.1" y="165" width="1.8" height="15.0" fill="rgb(223,101,13)" rx="2" ry="2" />
<text  x="902.14" y="175.5" ></text>
</g>
<g >
<title>zdepth::DepthCompressor::DecompressImage (6,774 samples, 11.37%)</title><rect x="916.7" y="389" width="134.2" height="15.0" fill="rgb(210,175,34)" rx="2" ry="2" />
<text  x="919.71" y="399.5" >zdepth::DepthCom..</text>
</g>
<g >
<title>?? (32 samples, 0.05%)</title><rect x="681.7" y="341" width="0.7" height="15.0" fill="rgb(220,74,53)" rx="2" ry="2" />
<text  x="684.74" y="351.5" ></text>
</g>
<g >
<title>ZSTD_hash6Ptr (270 samples, 0.45%)</title><rect x="856.3" y="181" width="5.3" height="15.0" fill="rgb(213,67,31)" rx="2" ry="2" />
<text  x="859.30" y="191.5" ></text>
</g>
<g >
<title>FSE_buildCTable_wksp (131 samples, 0.22%)</title><rect x="867.9" y="197" width="2.6" height="15.0" fill="rgb(253,49,1)" rx="2" ry="2" />
<text  x="870.92" y="207.5" ></text>
</g>
<g >
<title>HIST_countFast_wksp (198 samples, 0.33%)</title><rect x="872.1" y="149" width="3.9" height="15.0" fill="rgb(232,88,52)" rx="2" ry="2" />
<text  x="875.12" y="159.5" ></text>
</g>
<g >
<title>?? (32 samples, 0.05%)</title><rect x="681.7" y="293" width="0.7" height="15.0" fill="rgb(248,135,12)" rx="2" ry="2" />
<text  x="684.74" y="303.5" ></text>
</g>
<g >
<title>zdepth::AzureKinectQuantizeDepth (1,888 samples, 3.17%)</title><rect x="75.7" y="469" width="37.4" height="15.0" fill="rgb(205,116,9)" rx="2" ry="2" />
<text  x="78.72" y="479.5" >zde..</text>
</g>
<g >
<title>__memset_avx2_erms (32 samples, 0.05%)</title><rect x="681.7" y="245" width="0.7" height="15.0" fill="rgb(236,86,27)" rx="2" ry="2" />
<text  x="684.74" y="255.5" ></text>
</g>
<g >
<title>ZSTD_hash5 (106 samples, 0.18%)</title><rect x="854.2" y="165" width="2.1" height="15.0" fill="rgb(224,118,0)" rx="2" ry="2" />
<text  x="857.20" y="175.5" ></text>
</g>
<g >
<title>ZSTD_hash6 (270 samples, 0.45%)</title><rect x="856.3" y="165" width="5.3" height="15.0" fill="rgb(227,42,8)" rx="2" ry="2" />
<text  x="859.30" y="175.5" ></text>
</g>
<g >
<title>FSE_readNCount (67 samples, 0.11%)</title><rect x="1163.4" y="245" width="1.3" height="15.0" fill="rgb(245,73,33)" rx="2" ry="2" />
<text  x="1166.40" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (6 samples, 0.01%)</title><rect x="799.9" y="277" width="0.1" height="15.0" fill="rgb(205,93,32)" rx="2" ry="2" />
<text  x="802.93" y="287.5" ></text>
</g>
<g >
<title>FSE_decodeSymbolFast (11 samples, 0.02%)</title><rect x="1159.9" y="149" width="0.2" height="15.0" fill="rgb(229,45,49)" rx="2" ry="2" />
<text  x="1162.91" y="159.5" ></text>
</g>
<g >
<title>BIT_flushBits (41 samples, 0.07%)</title><rect x="896.4" y="181" width="0.8" height="15.0" fill="rgb(207,184,8)" rx="2" ry="2" />
<text  x="899.39" y="191.5" ></text>
</g>
<g >
<title>MEM_read64 (14 samples, 0.02%)</title><rect x="1150.1" y="181" width="0.2" height="15.0" fill="rgb(205,84,28)" rx="2" ry="2" />
<text  x="1153.05" y="191.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.31 (6 samples, 0.01%)</title><rect x="10.0" y="309" width="0.1" height="15.0" fill="rgb(230,181,40)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>ZSTD_copy8 (10 samples, 0.02%)</title><rect x="1188.9" y="197" width="0.2" height="15.0" fill="rgb(207,41,44)" rx="2" ry="2" />
<text  x="1191.87" y="207.5" ></text>
</g>
<g >
<title>ZSTD_decodeLiteralsBlock (745 samples, 1.25%)</title><rect x="1148.6" y="277" width="14.7" height="15.0" fill="rgb(206,194,29)" rx="2" ry="2" />
<text  x="1151.58" y="287.5" ></text>
</g>
<g >
<title>ZSTD_initDCtx_internal (7 samples, 0.01%)</title><rect x="1148.3" y="325" width="0.2" height="15.0" fill="rgb(224,154,29)" rx="2" ry="2" />
<text  x="1151.33" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (24 samples, 0.04%)</title><rect x="1189.3" y="245" width="0.5" height="15.0" fill="rgb(243,11,44)" rx="2" ry="2" />
<text  x="1192.29" y="255.5" ></text>
</g>
<g >
<title>GetTimeUsec (11 samples, 0.02%)</title><rect x="158.8" y="405" width="0.2" height="15.0" fill="rgb(221,109,27)" rx="2" ry="2" />
<text  x="161.77" y="415.5" ></text>
</g>
<g >
<title>HUF_compressWeights (77 samples, 0.13%)</title><rect x="891.2" y="149" width="1.6" height="15.0" fill="rgb(237,138,11)" rx="2" ry="2" />
<text  x="894.24" y="159.5" ></text>
</g>
<g >
<title>ZSTD_decompress (2,068 samples, 3.47%)</title><rect x="1148.3" y="373" width="41.0" height="15.0" fill="rgb(238,229,20)" rx="2" ry="2" />
<text  x="1151.33" y="383.5" >ZST..</text>
</g>
<g >
<title>BIT_reloadDStream (54 samples, 0.09%)</title><rect x="1149.3" y="229" width="1.0" height="15.0" fill="rgb(226,185,30)" rx="2" ry="2" />
<text  x="1152.26" y="239.5" ></text>
</g>
<g >
<title>HUF_compress4X_usingCTable_internal (441 samples, 0.74%)</title><rect x="882.2" y="149" width="8.8" height="15.0" fill="rgb(217,9,31)" rx="2" ry="2" />
<text  x="885.22" y="159.5" ></text>
</g>
<g >
<title>memcpy (21 samples, 0.04%)</title><rect x="1181.8" y="197" width="0.4" height="15.0" fill="rgb(220,28,8)" rx="2" ry="2" />
<text  x="1184.76" y="207.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 0.01%)</title><rect x="10.0" y="293" width="0.1" height="15.0" fill="rgb(241,175,53)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.39 (6 samples, 0.01%)</title><rect x="10.0" y="437" width="0.1" height="15.0" fill="rgb(227,134,54)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>ZSTD_compress (5,264 samples, 8.84%)</title><rect x="798.5" y="373" width="104.3" height="15.0" fill="rgb(205,217,27)" rx="2" ry="2" />
<text  x="801.50" y="383.5" >ZSTD_compress</text>
</g>
<g >
<title>HUF_compress1X_usingCTable_internal (437 samples, 0.73%)</title><rect x="882.3" y="133" width="8.7" height="15.0" fill="rgb(208,164,32)" rx="2" ry="2" />
<text  x="885.30" y="143.5" ></text>
</g>
<g >
<title>HUF_setMaxHeight (19 samples, 0.03%)</title><rect x="878.2" y="149" width="0.4" height="15.0" fill="rgb(246,72,10)" rx="2" ry="2" />
<text  x="881.24" y="159.5" ></text>
</g>
<g >
<title>ZSTD_compressEnd (5,165 samples, 8.67%)</title><rect x="800.0" y="309" width="102.3" height="15.0" fill="rgb(244,102,44)" rx="2" ry="2" />
<text  x="803.05" y="319.5" >ZSTD_compres..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (6 samples, 0.01%)</title><rect x="559.1" y="357" width="0.2" height="15.0" fill="rgb(219,15,54)" rx="2" ry="2" />
<text  x="562.14" y="367.5" ></text>
</g>
<g >
<title>HIST_count_simple (8 samples, 0.01%)</title><rect x="875.9" y="133" width="0.1" height="15.0" fill="rgb(234,126,46)" rx="2" ry="2" />
<text  x="878.89" y="143.5" ></text>
</g>
<g >
<title>ZSTD_decodeSeqHeaders (196 samples, 0.33%)</title><rect x="1163.3" y="277" width="3.9" height="15.0" fill="rgb(220,167,8)" rx="2" ry="2" />
<text  x="1166.34" y="287.5" ></text>
</g>
<g >
<title>MEM_readLE64 (14 samples, 0.02%)</title><rect x="1150.1" y="197" width="0.2" height="15.0" fill="rgb(246,161,34)" rx="2" ry="2" />
<text  x="1153.05" y="207.5" ></text>
</g>
<g >
<title>HIST_count_wksp (198 samples, 0.33%)</title><rect x="872.1" y="165" width="3.9" height="15.0" fill="rgb(221,79,47)" rx="2" ry="2" />
<text  x="875.12" y="175.5" ></text>
</g>
<g >
<title>ZSTD_hash5Ptr (106 samples, 0.18%)</title><rect x="854.2" y="181" width="2.1" height="15.0" fill="rgb(223,36,6)" rx="2" ry="2" />
<text  x="857.20" y="191.5" ></text>
</g>
<g >
<title>BIT_lookBitsFast (40 samples, 0.07%)</title><rect x="1174.6" y="197" width="0.7" height="15.0" fill="rgb(219,193,3)" rx="2" ry="2" />
<text  x="1177.55" y="207.5" ></text>
</g>
<g >
<title>perf (6 samples, 0.01%)</title><rect x="10.0" y="501" width="0.1" height="15.0" fill="rgb(205,90,0)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>BIT_addBits (10 samples, 0.02%)</title><rect x="892.0" y="101" width="0.2" height="15.0" fill="rgb(238,129,39)" rx="2" ry="2" />
<text  x="894.97" y="111.5" ></text>
</g>
<g >
<title>ZSTD_compressBlock_fast (3,313 samples, 5.56%)</title><rect x="800.1" y="229" width="65.6" height="15.0" fill="rgb(233,123,28)" rx="2" ry="2" />
<text  x="803.13" y="239.5" >ZSTD_co..</text>
</g>
<g >
<title>BIT_lookBits (6 samples, 0.01%)</title><rect x="1163.1" y="117" width="0.1" height="15.0" fill="rgb(228,137,10)" rx="2" ry="2" />
<text  x="1166.10" y="127.5" ></text>
</g>
<g >
<title>BIT_lookBitsFast (28 samples, 0.05%)</title><rect x="1155.7" y="213" width="0.5" height="15.0" fill="rgb(227,100,13)" rx="2" ry="2" />
<text  x="1158.68" y="223.5" ></text>
</g>
<g >
<title>ZSTD_createDCtx_advanced (9 samples, 0.02%)</title><rect x="1148.3" y="341" width="0.2" height="15.0" fill="rgb(214,5,45)" rx="2" ry="2" />
<text  x="1151.33" y="351.5" ></text>
</g>
<g >
<title>ZSTD_wildcopy (215 samples, 0.36%)</title><rect x="1183.3" y="213" width="4.2" height="15.0" fill="rgb(211,5,37)" rx="2" ry="2" />
<text  x="1186.29" y="223.5" ></text>
</g>
<g >
<title>FSE_buildDTable (9 samples, 0.02%)</title><rect x="1159.6" y="181" width="0.2" height="15.0" fill="rgb(207,98,16)" rx="2" ry="2" />
<text  x="1162.58" y="191.5" ></text>
</g>
<g >
<title>ZSTD_copy8 (162 samples, 0.27%)</title><rect x="1184.3" y="197" width="3.2" height="15.0" fill="rgb(238,116,37)" rx="2" ry="2" />
<text  x="1187.34" y="207.5" ></text>
</g>
<g >
<title>HIST_count_simple (53 samples, 0.09%)</title><rect x="866.8" y="197" width="1.1" height="15.0" fill="rgb(250,200,54)" rx="2" ry="2" />
<text  x="869.83" y="207.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (30 samples, 0.05%)</title><rect x="902.8" y="245" width="0.6" height="15.0" fill="rgb(235,72,26)" rx="2" ry="2" />
<text  x="905.84" y="255.5" ></text>
</g>
<g >
<title>?? (24 samples, 0.04%)</title><rect x="1189.3" y="341" width="0.5" height="15.0" fill="rgb(205,117,1)" rx="2" ry="2" />
<text  x="1192.29" y="351.5" ></text>
</g>
<g >
<title>HUF_compress1X_usingCTable_internal_bmi2 (436 samples, 0.73%)</title><rect x="882.3" y="117" width="8.7" height="15.0" fill="rgb(230,58,31)" rx="2" ry="2" />
<text  x="885.32" y="127.5" ></text>
</g>
<g >
<title>HUF_compress_internal (1,046 samples, 1.76%)</title><rect x="872.1" y="181" width="20.7" height="15.0" fill="rgb(211,22,32)" rx="2" ry="2" />
<text  x="875.10" y="191.5" ></text>
</g>
<g >
<title>BIT_reloadDStream (67 samples, 0.11%)</title><rect x="1152.7" y="229" width="1.4" height="15.0" fill="rgb(242,98,12)" rx="2" ry="2" />
<text  x="1155.74" y="239.5" ></text>
</g>
<g >
<title>HIST_countFast_wksp (190 samples, 0.32%)</title><rect x="872.1" y="133" width="3.8" height="15.0" fill="rgb(245,57,47)" rx="2" ry="2" />
<text  x="875.12" y="143.5" ></text>
</g>
<g >
<title>memcpy (11 samples, 0.02%)</title><rect x="1184.1" y="181" width="0.2" height="15.0" fill="rgb(213,62,10)" rx="2" ry="2" />
<text  x="1187.12" y="191.5" ></text>
</g>
<g >
<title>zdepth::ZstdDecompress (24 samples, 0.04%)</title><rect x="1189.3" y="373" width="0.5" height="15.0" fill="rgb(235,59,43)" rx="2" ry="2" />
<text  x="1192.29" y="383.5" ></text>
</g>
<g >
<title>ZSTD_highbit32 (12 samples, 0.02%)</title><rect x="902.1" y="197" width="0.2" height="15.0" fill="rgb(218,50,10)" rx="2" ry="2" />
<text  x="905.07" y="207.5" ></text>
</g>
<g >
<title>BIT_lookBitsFast (11 samples, 0.02%)</title><rect x="1150.9" y="213" width="0.3" height="15.0" fill="rgb(241,181,14)" rx="2" ry="2" />
<text  x="1153.94" y="223.5" ></text>
</g>
<g >
<title>BIT_skipBits (17 samples, 0.03%)</title><rect x="1151.2" y="213" width="0.3" height="15.0" fill="rgb(233,155,15)" rx="2" ry="2" />
<text  x="1154.16" y="223.5" ></text>
</g>
<g >
<title>Zdepth_compress (960 samples, 1.61%)</title><rect x="159.0" y="405" width="19.0" height="15.0" fill="rgb(252,138,19)" rx="2" ry="2" />
<text  x="161.99" y="415.5" ></text>
</g>
<g >
<title>ZSTD_copy16 (54 samples, 0.09%)</title><rect x="1187.8" y="197" width="1.1" height="15.0" fill="rgb(254,205,3)" rx="2" ry="2" />
<text  x="1190.80" y="207.5" ></text>
</g>
<g >
<title>memcpy (56 samples, 0.09%)</title><rect x="1182.2" y="197" width="1.1" height="15.0" fill="rgb(229,72,43)" rx="2" ry="2" />
<text  x="1185.18" y="207.5" ></text>
</g>
<g >
<title>HIST_count_parallel_wksp (190 samples, 0.32%)</title><rect x="872.1" y="117" width="3.8" height="15.0" fill="rgb(217,54,4)" rx="2" ry="2" />
<text  x="875.12" y="127.5" ></text>
</g>
<g >
<title>ZSTD_wildcopy_16min (77 samples, 0.13%)</title><rect x="1187.5" y="213" width="1.6" height="15.0" fill="rgb(218,174,39)" rx="2" ry="2" />
<text  x="1190.54" y="223.5" ></text>
</g>
<g >
<title>ZSTD_count (382 samples, 0.64%)</title><rect x="846.6" y="197" width="7.6" height="15.0" fill="rgb(250,168,0)" rx="2" ry="2" />
<text  x="849.63" y="207.5" ></text>
</g>
<g >
<title>?? (32 samples, 0.05%)</title><rect x="681.7" y="325" width="0.7" height="15.0" fill="rgb(227,55,28)" rx="2" ry="2" />
<text  x="684.74" y="335.5" ></text>
</g>
<g >
<title>FSE_buildCTable_wksp (23 samples, 0.04%)</title><rect x="891.2" y="133" width="0.5" height="15.0" fill="rgb(249,21,5)" rx="2" ry="2" />
<text  x="894.24" y="143.5" ></text>
</g>
<g >
<title>FSE_decodeSymbol (7 samples, 0.01%)</title><rect x="1163.1" y="149" width="0.1" height="15.0" fill="rgb(211,135,20)" rx="2" ry="2" />
<text  x="1166.08" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (24 samples, 0.04%)</title><rect x="1189.3" y="261" width="0.5" height="15.0" fill="rgb(243,99,53)" rx="2" ry="2" />
<text  x="1192.29" y="271.5" ></text>
</g>
<g >
<title>FSE_encodeSymbol (20 samples, 0.03%)</title><rect x="891.8" y="117" width="0.4" height="15.0" fill="rgb(251,64,24)" rx="2" ry="2" />
<text  x="894.77" y="127.5" ></text>
</g>
<g >
<title>[unknown] (3,149 samples, 5.29%)</title><rect x="50.8" y="485" width="62.3" height="15.0" fill="rgb(242,61,0)" rx="2" ry="2" />
<text  x="53.76" y="495.5" >[unkno..</text>
</g>
<g >
<title>MEM_readST (71 samples, 0.12%)</title><rect x="851.9" y="181" width="1.4" height="15.0" fill="rgb(231,131,34)" rx="2" ry="2" />
<text  x="854.90" y="191.5" ></text>
</g>
<g >
<title>intel_thermal_interrupt (8 samples, 0.01%)</title><rect x="1038.8" y="341" width="0.1" height="15.0" fill="rgb(211,21,25)" rx="2" ry="2" />
<text  x="1041.78" y="351.5" ></text>
</g>
<g >
<title>FSE_decompress_usingDTable_generic (11 samples, 0.02%)</title><rect x="1163.0" y="165" width="0.2" height="15.0" fill="rgb(228,205,21)" rx="2" ry="2" />
<text  x="1166.00" y="175.5" ></text>
</g>
<g >
<title>HUF_readDTableX2_wksp (157 samples, 0.26%)</title><rect x="1160.2" y="229" width="3.1" height="15.0" fill="rgb(209,106,25)" rx="2" ry="2" />
<text  x="1163.17" y="239.5" ></text>
</g>
<g >
<title>BIT_readBitsFast (56 samples, 0.09%)</title><rect x="1174.6" y="213" width="1.1" height="15.0" fill="rgb(240,107,16)" rx="2" ry="2" />
<text  x="1177.55" y="223.5" ></text>
</g>
<g >
<title>ZSTD_copy4 (21 samples, 0.04%)</title><rect x="1181.8" y="213" width="0.4" height="15.0" fill="rgb(241,122,3)" rx="2" ry="2" />
<text  x="1184.76" y="223.5" ></text>
</g>
<g >
<title>zdepth::AzureKinectDequantizeDepth (1,240 samples, 2.08%)</title><rect x="51.2" y="469" width="24.5" height="15.0" fill="rgb(211,204,42)" rx="2" ry="2" />
<text  x="54.16" y="479.5" >z..</text>
</g>
<g >
<title>MEM_writeLEST (21 samples, 0.04%)</title><rect x="885.0" y="69" width="0.4" height="15.0" fill="rgb(223,177,33)" rx="2" ry="2" />
<text  x="887.96" y="79.5" ></text>
</g>
<g >
<title>ZSTD_decompress_usingDDict (2,055 samples, 3.45%)</title><rect x="1148.5" y="341" width="40.7" height="15.0" fill="rgb(250,179,51)" rx="2" ry="2" />
<text  x="1151.51" y="351.5" >ZST..</text>
</g>
<g >
<title>?? (32 samples, 0.05%)</title><rect x="681.7" y="309" width="0.7" height="15.0" fill="rgb(211,72,9)" rx="2" ry="2" />
<text  x="684.74" y="319.5" ></text>
</g>
<g >
<title>ZSTD_initCCtx (18 samples, 0.03%)</title><rect x="902.4" y="357" width="0.4" height="15.0" fill="rgb(242,199,0)" rx="2" ry="2" />
<text  x="905.41" y="367.5" ></text>
</g>
<g >
<title>?? (31 samples, 0.05%)</title><rect x="902.8" y="277" width="0.7" height="15.0" fill="rgb(210,83,25)" rx="2" ry="2" />
<text  x="905.84" y="287.5" ></text>
</g>
<g >
<title>HUF_decodeSymbolX2 (132 samples, 0.22%)</title><rect x="1154.8" y="229" width="2.6" height="15.0" fill="rgb(240,16,16)" rx="2" ry="2" />
<text  x="1157.80" y="239.5" ></text>
</g>
<g >
<title>zdepth::ZstdCompress (34 samples, 0.06%)</title><rect x="902.8" y="373" width="0.7" height="15.0" fill="rgb(242,161,28)" rx="2" ry="2" />
<text  x="905.78" y="383.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (6 samples, 0.01%)</title><rect x="559.1" y="373" width="0.2" height="15.0" fill="rgb(222,220,11)" rx="2" ry="2" />
<text  x="562.14" y="383.5" ></text>
</g>
<g >
<title>zdepth::AzureKinectQuantizeDepth (8,536 samples, 14.33%)</title><rect x="178.1" y="405" width="169.0" height="15.0" fill="rgb(242,156,25)" rx="2" ry="2" />
<text  x="181.06" y="415.5" >zdepth::AzureKinectQu..</text>
</g>
<g >
<title>ZSTD_copy8 (56 samples, 0.09%)</title><rect x="1182.2" y="213" width="1.1" height="15.0" fill="rgb(210,80,7)" rx="2" ry="2" />
<text  x="1185.18" y="223.5" ></text>
</g>
<g >
<title>memcpy (49 samples, 0.08%)</title><rect x="1156.4" y="213" width="1.0" height="15.0" fill="rgb(245,23,47)" rx="2" ry="2" />
<text  x="1159.45" y="223.5" ></text>
</g>
<g >
<title>HUF_decompress4X1_usingDTable_internal_bmi2 (145 samples, 0.24%)</title><rect x="1148.6" y="261" width="2.9" height="15.0" fill="rgb(240,226,41)" rx="2" ry="2" />
<text  x="1151.62" y="271.5" ></text>
</g>
<g >
<title>?? (31 samples, 0.05%)</title><rect x="902.8" y="309" width="0.7" height="15.0" fill="rgb(211,119,35)" rx="2" ry="2" />
<text  x="905.84" y="319.5" ></text>
</g>
<g >
<title>MEM_writeLE64 (21 samples, 0.04%)</title><rect x="885.0" y="53" width="0.4" height="15.0" fill="rgb(246,125,32)" rx="2" ry="2" />
<text  x="887.96" y="63.5" ></text>
</g>
<g >
<title>ZSTD_compress_usingDict (5,243 samples, 8.80%)</title><rect x="798.5" y="341" width="103.9" height="15.0" fill="rgb(210,71,54)" rx="2" ry="2" />
<text  x="801.54" y="351.5" >ZSTD_compres..</text>
</g>
<g >
<title>ZSTD_copy16 (11 samples, 0.02%)</title><rect x="1184.1" y="197" width="0.2" height="15.0" fill="rgb(211,64,6)" rx="2" ry="2" />
<text  x="1187.12" y="207.5" ></text>
</g>
<g >
<title>ZSTD_decompressDCtx (2,055 samples, 3.45%)</title><rect x="1148.5" y="357" width="40.7" height="15.0" fill="rgb(240,212,7)" rx="2" ry="2" />
<text  x="1151.51" y="367.5" >ZST..</text>
</g>
<g >
<title>HUF_fillDTableX2Level2 (106 samples, 0.18%)</title><rect x="1160.7" y="197" width="2.1" height="15.0" fill="rgb(224,228,15)" rx="2" ry="2" />
<text  x="1163.75" y="207.5" ></text>
</g>
<g >
<title>HIST_count_parallel_wksp (44 samples, 0.07%)</title><rect x="866.0" y="181" width="0.8" height="15.0" fill="rgb(229,74,20)" rx="2" ry="2" />
<text  x="868.96" y="191.5" ></text>
</g>
<g >
<title>FSE_compress_usingCTable_generic (24 samples, 0.04%)</title><rect x="891.7" y="133" width="0.5" height="15.0" fill="rgb(209,1,34)" rx="2" ry="2" />
<text  x="894.69" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="10.0" y="469" width="0.1" height="15.0" fill="rgb(227,133,17)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>ZSTD_decompressBlock_internal (2,050 samples, 3.44%)</title><rect x="1148.6" y="293" width="40.6" height="15.0" fill="rgb(236,191,9)" rx="2" ry="2" />
<text  x="1151.58" y="303.5" >ZST..</text>
</g>
<g >
<title>HUF_decodeStreamX2 (37 samples, 0.06%)</title><rect x="1154.1" y="229" width="0.7" height="15.0" fill="rgb(213,214,21)" rx="2" ry="2" />
<text  x="1157.07" y="239.5" ></text>
</g>
<g >
<title>Zdepth_compress (585 samples, 0.98%)</title><rect x="11.9" y="469" width="11.6" height="15.0" fill="rgb(244,55,14)" rx="2" ry="2" />
<text  x="14.88" y="479.5" ></text>
</g>
<g >
<title>_start (54,358 samples, 91.24%)</title><rect x="113.2" y="485" width="1076.6" height="15.0" fill="rgb(214,113,32)" rx="2" ry="2" />
<text  x="116.15" y="495.5" >_start</text>
</g>
<g >
<title>setup_new_exec (6 samples, 0.01%)</title><rect x="10.0" y="389" width="0.1" height="15.0" fill="rgb(254,36,14)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (31 samples, 0.05%)</title><rect x="902.8" y="357" width="0.7" height="15.0" fill="rgb(241,131,45)" rx="2" ry="2" />
<text  x="905.84" y="367.5" ></text>
</g>
<g >
<title>HIST_countFast_wksp (97 samples, 0.16%)</title><rect x="866.0" y="213" width="1.9" height="15.0" fill="rgb(224,61,31)" rx="2" ry="2" />
<text  x="868.96" y="223.5" ></text>
</g>
<g >
<title>FSE_writeNCount (7 samples, 0.01%)</title><rect x="892.2" y="133" width="0.2" height="15.0" fill="rgb(232,12,25)" rx="2" ry="2" />
<text  x="895.25" y="143.5" ></text>
</g>
<g >
<title>load_elf_binary (6 samples, 0.01%)</title><rect x="10.0" y="405" width="0.1" height="15.0" fill="rgb(233,139,34)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>MEM_readLEST (14 samples, 0.02%)</title><rect x="1150.1" y="213" width="0.2" height="15.0" fill="rgb(246,197,36)" rx="2" ry="2" />
<text  x="1153.05" y="223.5" ></text>
</g>
<g >
<title>BIT_addBitsFast (120 samples, 0.20%)</title><rect x="888.6" y="69" width="2.3" height="15.0" fill="rgb(248,117,27)" rx="2" ry="2" />
<text  x="891.56" y="79.5" ></text>
</g>
<g >
<title>ZSTD_compressBlock_internal (5,160 samples, 8.66%)</title><rect x="800.1" y="261" width="102.2" height="15.0" fill="rgb(246,187,36)" rx="2" ry="2" />
<text  x="803.11" y="271.5" >ZSTD_compres..</text>
</g>
<g >
<title>HUF_sort (176 samples, 0.30%)</title><rect x="878.6" y="149" width="3.5" height="15.0" fill="rgb(248,79,35)" rx="2" ry="2" />
<text  x="881.62" y="159.5" ></text>
</g>
<g >
<title>zdepth::AzureKinectDequantizeDepth (3,367 samples, 5.65%)</title><rect x="1079.3" y="373" width="66.7" height="15.0" fill="rgb(218,141,8)" rx="2" ry="2" />
<text  x="1082.28" y="383.5" >zdepth:..</text>
</g>
<g >
<title>zdepth::DepthCompressor::EncodeZeroes (876 samples, 1.47%)</title><rect x="660.2" y="389" width="17.3" height="15.0" fill="rgb(247,170,28)" rx="2" ry="2" />
<text  x="663.17" y="399.5" ></text>
</g>
<g >
<title>ZSTD_resetCCtx_internal (75 samples, 0.13%)</title><rect x="798.6" y="293" width="1.4" height="15.0" fill="rgb(214,180,17)" rx="2" ry="2" />
<text  x="801.56" y="303.5" ></text>
</g>
<g >
<title>ZSTD_buildFSETable (126 samples, 0.21%)</title><rect x="1164.7" y="245" width="2.5" height="15.0" fill="rgb(245,123,31)" rx="2" ry="2" />
<text  x="1167.73" y="255.5" ></text>
</g>
<g >
<title>?? (466 samples, 0.78%)</title><rect x="537.4" y="357" width="9.2" height="15.0" fill="rgb(237,19,34)" rx="2" ry="2" />
<text  x="540.37" y="367.5" ></text>
</g>
<g >
<title>ZSTD_compressLiterals (1,050 samples, 1.76%)</title><rect x="872.1" y="213" width="20.8" height="15.0" fill="rgb(205,101,28)" rx="2" ry="2" />
<text  x="875.08" y="223.5" ></text>
</g>
<g >
<title>ZSTD_storeSeq (205 samples, 0.34%)</title><rect x="861.6" y="197" width="4.1" height="15.0" fill="rgb(217,21,36)" rx="2" ry="2" />
<text  x="864.65" y="207.5" ></text>
</g>
<g >
<title>ZSTD_wildcopy (123 samples, 0.21%)</title><rect x="863.3" y="181" width="2.4" height="15.0" fill="rgb(234,53,28)" rx="2" ry="2" />
<text  x="866.27" y="191.5" ></text>
</g>
<g >
<title>main (54,354 samples, 91.23%)</title><rect x="113.2" y="453" width="1076.6" height="15.0" fill="rgb(224,159,0)" rx="2" ry="2" />
<text  x="116.19" y="463.5" >main</text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (32 samples, 0.05%)</title><rect x="681.7" y="261" width="0.7" height="15.0" fill="rgb(248,86,21)" rx="2" ry="2" />
<text  x="684.74" y="271.5" ></text>
</g>
<g >
<title>ZSTD_cpuid (12 samples, 0.02%)</title><rect x="902.5" y="341" width="0.2" height="15.0" fill="rgb(245,30,13)" rx="2" ry="2" />
<text  x="905.47" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (32 samples, 0.05%)</title><rect x="681.7" y="357" width="0.7" height="15.0" fill="rgb(210,97,48)" rx="2" ry="2" />
<text  x="684.74" y="367.5" ></text>
</g>
<g >
<title>ZSTD_copy16 (35 samples, 0.06%)</title><rect x="863.8" y="165" width="0.7" height="15.0" fill="rgb(237,135,10)" rx="2" ry="2" />
<text  x="866.80" y="175.5" ></text>
</g>
<g >
<title>ZSTD_execSequence (514 samples, 0.86%)</title><rect x="1178.9" y="229" width="10.2" height="15.0" fill="rgb(224,46,6)" rx="2" ry="2" />
<text  x="1181.89" y="239.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 0.01%)</title><rect x="10.0" y="341" width="0.1" height="15.0" fill="rgb(232,177,18)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>zdepth::AzureKinectQuantizeDepth (4,770 samples, 8.01%)</title><rect x="704.0" y="373" width="94.5" height="15.0" fill="rgb(228,80,27)" rx="2" ry="2" />
<text  x="707.02" y="383.5" >zdepth::Azu..</text>
</g>
<g >
<title>BIT_getMiddleBits (32 samples, 0.05%)</title><rect x="1177.8" y="165" width="0.7" height="15.0" fill="rgb(223,22,37)" rx="2" ry="2" />
<text  x="1180.82" y="175.5" ></text>
</g>
<g >
<title>ZSTD_compressCCtx (5,243 samples, 8.80%)</title><rect x="798.5" y="357" width="103.9" height="15.0" fill="rgb(244,164,2)" rx="2" ry="2" />
<text  x="801.54" y="367.5" >ZSTD_compres..</text>
</g>
<g >
<title>ZSTD_decompressSequences_bmi2 (1,107 samples, 1.86%)</title><rect x="1167.3" y="261" width="21.9" height="15.0" fill="rgb(253,24,29)" rx="2" ry="2" />
<text  x="1170.26" y="271.5" >Z..</text>
</g>
<g >
<title>?? (31 samples, 0.05%)</title><rect x="902.8" y="293" width="0.7" height="15.0" fill="rgb(212,13,29)" rx="2" ry="2" />
<text  x="905.84" y="303.5" ></text>
</g>
<g >
<title>FSE_encodeSymbol (185 samples, 0.31%)</title><rect x="897.2" y="181" width="3.7" height="15.0" fill="rgb(224,145,15)" rx="2" ry="2" />
<text  x="900.20" y="191.5" ></text>
</g>
<g >
<title>zdepth::DepthCompressor::CompressImage (5,090 samples, 8.54%)</title><rect x="559.4" y="373" width="100.8" height="15.0" fill="rgb(242,28,37)" rx="2" ry="2" />
<text  x="562.36" y="383.5" >zdepth::Dept..</text>
</g>
<g >
<title>MEM_read32 (136 samples, 0.23%)</title><rect x="843.9" y="197" width="2.7" height="15.0" fill="rgb(205,192,10)" rx="2" ry="2" />
<text  x="846.94" y="207.5" ></text>
</g>
<g >
<title>ZSTD_seqToCodes (71 samples, 0.12%)</title><rect x="900.9" y="213" width="1.4" height="15.0" fill="rgb(223,172,34)" rx="2" ry="2" />
<text  x="903.90" y="223.5" ></text>
</g>
<g >
<title>FSE_decompress_usingDTable (11 samples, 0.02%)</title><rect x="1163.0" y="181" width="0.2" height="15.0" fill="rgb(234,153,20)" rx="2" ry="2" />
<text  x="1166.00" y="191.5" ></text>
</g>
<g >
<title>TestImage (54,354 samples, 91.23%)</title><rect x="113.2" y="437" width="1076.6" height="15.0" fill="rgb(238,123,23)" rx="2" ry="2" />
<text  x="116.19" y="447.5" >TestImage</text>
</g>
<g >
<title>?? (32 samples, 0.05%)</title><rect x="681.7" y="277" width="0.7" height="15.0" fill="rgb(243,88,47)" rx="2" ry="2" />
<text  x="684.74" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="867.8" y="165" width="0.1" height="15.0" fill="rgb(210,194,9)" rx="2" ry="2" />
<text  x="870.77" y="175.5" ></text>
</g>
<g >
<title>HUF_compressCTable_internal (442 samples, 0.74%)</title><rect x="882.2" y="165" width="8.8" height="15.0" fill="rgb(227,137,22)" rx="2" ry="2" />
<text  x="885.20" y="175.5" ></text>
</g>
<g >
<title>memcpy (61 samples, 0.10%)</title><rect x="864.5" y="149" width="1.2" height="15.0" fill="rgb(234,200,28)" rx="2" ry="2" />
<text  x="867.50" y="159.5" ></text>
</g>
<g >
<title>zdepth::Unpack12 (119 samples, 0.20%)</title><rect x="1146.0" y="389" width="2.3" height="15.0" fill="rgb(221,165,31)" rx="2" ry="2" />
<text  x="1148.97" y="399.5" ></text>
</g>
<g >
<title>ZSTD_buildSeqTable (193 samples, 0.32%)</title><rect x="1163.4" y="261" width="3.8" height="15.0" fill="rgb(246,217,34)" rx="2" ry="2" />
<text  x="1166.40" y="271.5" ></text>
</g>
<g >
<title>memcpy (10 samples, 0.02%)</title><rect x="1188.9" y="181" width="0.2" height="15.0" fill="rgb(242,149,34)" rx="2" ry="2" />
<text  x="1191.87" y="191.5" ></text>
</g>
<g >
<title>HUF_readStats (40 samples, 0.07%)</title><rect x="1159.4" y="213" width="0.8" height="15.0" fill="rgb(245,110,11)" rx="2" ry="2" />
<text  x="1162.38" y="223.5" ></text>
</g>
<g >
<title>FSE_decompress_wksp (30 samples, 0.05%)</title><rect x="1159.6" y="197" width="0.6" height="15.0" fill="rgb(205,148,17)" rx="2" ry="2" />
<text  x="1162.58" y="207.5" ></text>
</g>
<g >
<title>?? (24 samples, 0.04%)</title><rect x="1189.3" y="309" width="0.5" height="15.0" fill="rgb(243,227,19)" rx="2" ry="2" />
<text  x="1192.29" y="319.5" ></text>
</g>
<g >
<title>HUF_decompress4X2_usingDTable_internal_body (299 samples, 0.50%)</title><rect x="1151.5" y="245" width="5.9" height="15.0" fill="rgb(231,183,15)" rx="2" ry="2" />
<text  x="1154.50" y="255.5" ></text>
</g>
<g >
<title>smp_thermal_interrupt (9 samples, 0.02%)</title><rect x="1038.8" y="357" width="0.2" height="15.0" fill="rgb(226,113,12)" rx="2" ry="2" />
<text  x="1041.78" y="367.5" ></text>
</g>
<g >
<title>zdepth_test (59,570 samples, 99.99%)</title><rect x="10.1" y="501" width="1179.9" height="15.0" fill="rgb(242,5,15)" rx="2" ry="2" />
<text  x="13.12" y="511.5" >zdepth_test</text>
</g>
<g >
<title>zdepth::DepthCompressor::WriteCompressedFile (8 samples, 0.01%)</title><rect x="677.5" y="389" width="0.2" height="15.0" fill="rgb(254,85,5)" rx="2" ry="2" />
<text  x="680.52" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (11 samples, 0.02%)</title><rect x="347.1" y="389" width="0.2" height="15.0" fill="rgb(247,154,10)" rx="2" ry="2" />
<text  x="350.13" y="399.5" ></text>
</g>
<g >
<title>?? (24 samples, 0.04%)</title><rect x="1189.3" y="325" width="0.5" height="15.0" fill="rgb(248,23,13)" rx="2" ry="2" />
<text  x="1192.29" y="335.5" ></text>
</g>
<g >
<title>zdepth::DequantizeDepthImage (4,801 samples, 8.06%)</title><rect x="1050.9" y="389" width="95.1" height="15.0" fill="rgb(235,42,3)" rx="2" ry="2" />
<text  x="1053.88" y="399.5" >zdepth::Deq..</text>
</g>
<g >
<title>ZSTD_highbit32 (6 samples, 0.01%)</title><rect x="902.0" y="181" width="0.1" height="15.0" fill="rgb(249,131,2)" rx="2" ry="2" />
<text  x="904.95" y="191.5" ></text>
</g>
<g >
<title>ZSTD_encodeSequences_bmi2 (403 samples, 0.68%)</title><rect x="892.9" y="213" width="8.0" height="15.0" fill="rgb(216,188,44)" rx="2" ry="2" />
<text  x="895.90" y="223.5" ></text>
</g>
<g >
<title>ZSTD_compressSequences (1,841 samples, 3.09%)</title><rect x="865.8" y="245" width="36.5" height="15.0" fill="rgb(234,126,24)" rx="2" ry="2" />
<text  x="868.84" y="255.5" >ZST..</text>
</g>
<g >
<title>zdepth::QuantizeDepthImage (5,863 samples, 9.84%)</title><rect x="682.4" y="389" width="116.1" height="15.0" fill="rgb(248,211,26)" rx="2" ry="2" />
<text  x="685.38" y="399.5" >zdepth::Quanti..</text>
</g>
<g >
<title>zdepth::AzureKinectQuantizeDepth (10 samples, 0.02%)</title><rect x="798.3" y="357" width="0.2" height="15.0" fill="rgb(240,2,9)" rx="2" ry="2" />
<text  x="801.30" y="367.5" ></text>
</g>
<g >
<title>FSE_decompress_usingDTable_generic (19 samples, 0.03%)</title><rect x="1159.8" y="165" width="0.3" height="15.0" fill="rgb(209,142,32)" rx="2" ry="2" />
<text  x="1162.76" y="175.5" ></text>
</g>
<g >
<title>BIT_lookBits (61 samples, 0.10%)</title><rect x="1177.2" y="181" width="1.3" height="15.0" fill="rgb(223,32,21)" rx="2" ry="2" />
<text  x="1180.24" y="191.5" ></text>
</g>
<g >
<title>HUF_readStats (22 samples, 0.04%)</title><rect x="1162.8" y="213" width="0.5" height="15.0" fill="rgb(236,4,40)" rx="2" ry="2" />
<text  x="1165.85" y="223.5" ></text>
</g>
<g >
<title>MEM_read32 (10 samples, 0.02%)</title><rect x="875.6" y="101" width="0.2" height="15.0" fill="rgb(249,39,26)" rx="2" ry="2" />
<text  x="878.65" y="111.5" ></text>
</g>
<g >
<title>?? (31 samples, 0.05%)</title><rect x="902.8" y="341" width="0.7" height="15.0" fill="rgb(249,228,3)" rx="2" ry="2" />
<text  x="905.84" y="351.5" ></text>
</g>
<g >
<title>ZSTD_buildCTable (212 samples, 0.36%)</title><rect x="867.9" y="213" width="4.2" height="15.0" fill="rgb(209,174,35)" rx="2" ry="2" />
<text  x="870.88" y="223.5" ></text>
</g>
<g >
<title>ZSTD_createDCtx (9 samples, 0.02%)</title><rect x="1148.3" y="357" width="0.2" height="15.0" fill="rgb(235,30,1)" rx="2" ry="2" />
<text  x="1151.33" y="367.5" ></text>
</g>
</g>
</svg>
