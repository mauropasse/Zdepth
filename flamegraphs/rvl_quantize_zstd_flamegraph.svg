<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="533" > </text>
<g id="frames">
<g >
<title>ZSTD_compressBlock_internal (6,458 samples, 12.95%)</title><rect x="982.7" y="261" width="152.8" height="15.0" fill="rgb(218,219,31)" rx="2" ry="2" />
<text  x="985.65" y="271.5" >ZSTD_compressBlock_..</text>
</g>
<g >
<title>__do_execve_file.isra.39 (6 samples, 0.01%)</title><rect x="10.0" y="421" width="0.1" height="15.0" fill="rgb(248,5,21)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (22 samples, 0.04%)</title><rect x="982.0" y="245" width="0.5" height="15.0" fill="rgb(209,34,30)" rx="2" ry="2" />
<text  x="985.01" y="255.5" ></text>
</g>
<g >
<title>BIT_reloadDStream (69 samples, 0.14%)</title><rect x="1174.9" y="229" width="1.7" height="15.0" fill="rgb(234,68,40)" rx="2" ry="2" />
<text  x="1177.95" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="1189.6" y="213" width="0.2" height="15.0" fill="rgb(211,134,45)" rx="2" ry="2" />
<text  x="1192.57" y="223.5" ></text>
</g>
<g >
<title>memcpy (19 samples, 0.04%)</title><rect x="1185.5" y="197" width="0.4" height="15.0" fill="rgb(209,172,39)" rx="2" ry="2" />
<text  x="1188.46" y="207.5" ></text>
</g>
<g >
<title>ZSTD_decodeSequence (287 samples, 0.58%)</title><rect x="1176.6" y="229" width="6.8" height="15.0" fill="rgb(237,28,47)" rx="2" ry="2" />
<text  x="1179.58" y="239.5" ></text>
</g>
<g >
<title>ZSTD_compressSequences (2,298 samples, 4.61%)</title><rect x="1081.1" y="245" width="54.4" height="15.0" fill="rgb(221,191,45)" rx="2" ry="2" />
<text  x="1084.10" y="255.5" >ZSTD_..</text>
</g>
<g >
<title>ZSTD_decompress_usingDDict (2,265 samples, 4.54%)</title><rect x="1136.2" y="341" width="53.6" height="15.0" fill="rgb(222,45,30)" rx="2" ry="2" />
<text  x="1139.23" y="351.5" >ZSTD_..</text>
</g>
<g >
<title>memset@plt (25 samples, 0.05%)</title><rect x="561.5" y="373" width="0.6" height="15.0" fill="rgb(231,211,46)" rx="2" ry="2" />
<text  x="564.50" y="383.5" ></text>
</g>
<g >
<title>zdepth::ZstdCompress (16 samples, 0.03%)</title><rect x="1135.8" y="373" width="0.3" height="15.0" fill="rgb(244,23,9)" rx="2" ry="2" />
<text  x="1138.76" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.01%)</title><rect x="10.0" y="469" width="0.1" height="15.0" fill="rgb(234,110,12)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>zdepth::AzureKinectQuantizeDepth (2,749 samples, 5.51%)</title><rect x="68.6" y="453" width="65.0" height="15.0" fill="rgb(233,202,44)" rx="2" ry="2" />
<text  x="71.57" y="463.5" >zdepth:..</text>
</g>
<g >
<title>ZSTD_copy16 (50 samples, 0.10%)</title><rect x="1078.6" y="165" width="1.2" height="15.0" fill="rgb(249,98,1)" rx="2" ry="2" />
<text  x="1081.64" y="175.5" ></text>
</g>
<g >
<title>FSE_decompress_usingDTable (23 samples, 0.05%)</title><rect x="1172.4" y="181" width="0.5" height="15.0" fill="rgb(231,101,3)" rx="2" ry="2" />
<text  x="1175.37" y="191.5" ></text>
</g>
<g >
<title>BIT_addBits (50 samples, 0.10%)</title><rect x="1129.0" y="181" width="1.2" height="15.0" fill="rgb(230,122,47)" rx="2" ry="2" />
<text  x="1132.02" y="191.5" ></text>
</g>
<g >
<title>?? (180 samples, 0.36%)</title><rect x="562.4" y="341" width="4.2" height="15.0" fill="rgb(220,76,10)" rx="2" ry="2" />
<text  x="565.37" y="351.5" ></text>
</g>
<g >
<title>ZSTD_highbit32 (17 samples, 0.03%)</title><rect x="1135.1" y="197" width="0.4" height="15.0" fill="rgb(211,139,27)" rx="2" ry="2" />
<text  x="1138.08" y="207.5" ></text>
</g>
<g >
<title>ZSTD_encodeSequences_bmi2 (266 samples, 0.53%)</title><rect x="1127.5" y="213" width="6.3" height="15.0" fill="rgb(240,33,54)" rx="2" ry="2" />
<text  x="1130.53" y="223.5" ></text>
</g>
<g >
<title>memcpy (50 samples, 0.10%)</title><rect x="1078.6" y="149" width="1.2" height="15.0" fill="rgb(231,79,47)" rx="2" ry="2" />
<text  x="1081.64" y="159.5" ></text>
</g>
<g >
<title>FSE_decompress_usingDTable_generic (23 samples, 0.05%)</title><rect x="1172.4" y="165" width="0.5" height="15.0" fill="rgb(206,117,37)" rx="2" ry="2" />
<text  x="1175.37" y="175.5" ></text>
</g>
<g >
<title>memset (6 samples, 0.01%)</title><rect x="1173.4" y="229" width="0.2" height="15.0" fill="rgb(250,22,42)" rx="2" ry="2" />
<text  x="1176.41" y="239.5" ></text>
</g>
<g >
<title>BIT_lookBitsFast (18 samples, 0.04%)</title><rect x="1149.8" y="197" width="0.5" height="15.0" fill="rgb(222,228,47)" rx="2" ry="2" />
<text  x="1152.84" y="207.5" ></text>
</g>
<g >
<title>HUF_compress1X_usingCTable_internal_bmi2 (926 samples, 1.86%)</title><rect x="1103.9" y="117" width="21.9" height="15.0" fill="rgb(208,90,26)" rx="2" ry="2" />
<text  x="1106.91" y="127.5" >H..</text>
</g>
<g >
<title>HUF_decodeStreamX2 (331 samples, 0.66%)</title><rect x="1146.5" y="229" width="7.8" height="15.0" fill="rgb(213,135,26)" rx="2" ry="2" />
<text  x="1149.48" y="239.5" ></text>
</g>
<g >
<title>HUF_sort (197 samples, 0.40%)</title><rect x="1099.2" y="149" width="4.6" height="15.0" fill="rgb(247,139,40)" rx="2" ry="2" />
<text  x="1102.15" y="159.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 0.01%)</title><rect x="10.0" y="325" width="0.1" height="15.0" fill="rgb(241,2,42)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>ZSTD_execSequence (261 samples, 0.52%)</title><rect x="1183.4" y="229" width="6.2" height="15.0" fill="rgb(230,150,35)" rx="2" ry="2" />
<text  x="1186.37" y="239.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (177 samples, 0.35%)</title><rect x="562.4" y="261" width="4.2" height="15.0" fill="rgb(225,151,22)" rx="2" ry="2" />
<text  x="565.37" y="271.5" ></text>
</g>
<g >
<title>zdepth::DequantizeDepthImage (229 samples, 0.46%)</title><rect x="56.5" y="453" width="5.5" height="15.0" fill="rgb(215,165,6)" rx="2" ry="2" />
<text  x="59.55" y="463.5" ></text>
</g>
<g >
<title>ZSTD_resetCCtx_internal (27 samples, 0.05%)</title><rect x="982.0" y="293" width="0.6" height="15.0" fill="rgb(207,43,54)" rx="2" ry="2" />
<text  x="984.99" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (16 samples, 0.03%)</title><rect x="1135.8" y="357" width="0.3" height="15.0" fill="rgb(234,113,11)" rx="2" ry="2" />
<text  x="1138.76" y="367.5" ></text>
</g>
<g >
<title>HIST_count_wksp (461 samples, 0.92%)</title><rect x="1085.5" y="165" width="10.9" height="15.0" fill="rgb(220,216,38)" rx="2" ry="2" />
<text  x="1088.50" y="175.5" ></text>
</g>
<g >
<title>[[vdso]] (7 samples, 0.01%)</title><rect x="562.2" y="341" width="0.1" height="15.0" fill="rgb(226,68,32)" rx="2" ry="2" />
<text  x="565.16" y="351.5" ></text>
</g>
<g >
<title>ZSTD_wildcopy (133 samples, 0.27%)</title><rect x="1077.6" y="181" width="3.2" height="15.0" fill="rgb(246,209,26)" rx="2" ry="2" />
<text  x="1080.64" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (16 samples, 0.03%)</title><rect x="1135.8" y="261" width="0.3" height="15.0" fill="rgb(254,60,13)" rx="2" ry="2" />
<text  x="1138.76" y="271.5" ></text>
</g>
<g >
<title>ZSTD_freeCCtxContent (5 samples, 0.01%)</title><rect x="1135.5" y="357" width="0.2" height="15.0" fill="rgb(206,13,53)" rx="2" ry="2" />
<text  x="1138.55" y="367.5" ></text>
</g>
<g >
<title>BIT_reloadDStream (5 samples, 0.01%)</title><rect x="1172.5" y="149" width="0.1" height="15.0" fill="rgb(237,220,15)" rx="2" ry="2" />
<text  x="1175.49" y="159.5" ></text>
</g>
<g >
<title>FSE_decompress_wksp (37 samples, 0.07%)</title><rect x="1172.2" y="197" width="0.9" height="15.0" fill="rgb(223,203,41)" rx="2" ry="2" />
<text  x="1175.20" y="207.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.31 (5 samples, 0.01%)</title><rect x="10.0" y="293" width="0.1" height="15.0" fill="rgb(206,26,35)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>DecompressRVL (8,954 samples, 17.96%)</title><rect x="350.2" y="389" width="211.9" height="15.0" fill="rgb(216,177,7)" rx="2" ry="2" />
<text  x="353.22" y="399.5" >DecompressRVL</text>
</g>
<g >
<title>DecompressRVL (16 samples, 0.03%)</title><rect x="10.4" y="453" width="0.4" height="15.0" fill="rgb(208,50,20)" rx="2" ry="2" />
<text  x="13.38" y="463.5" ></text>
</g>
<g >
<title>ZSTD_decompressSequences (639 samples, 1.28%)</title><rect x="1174.7" y="277" width="15.1" height="15.0" fill="rgb(225,67,22)" rx="2" ry="2" />
<text  x="1177.69" y="287.5" ></text>
</g>
<g >
<title>HIST_countFast_wksp (460 samples, 0.92%)</title><rect x="1085.5" y="149" width="10.9" height="15.0" fill="rgb(209,223,19)" rx="2" ry="2" />
<text  x="1088.52" y="159.5" ></text>
</g>
<g >
<title>FSE_decodeSymbolFast (12 samples, 0.02%)</title><rect x="1172.6" y="149" width="0.3" height="15.0" fill="rgb(238,93,24)" rx="2" ry="2" />
<text  x="1175.61" y="159.5" ></text>
</g>
<g >
<title>HUF_compress1X_usingCTable_internal (926 samples, 1.86%)</title><rect x="1103.9" y="133" width="21.9" height="15.0" fill="rgb(231,64,51)" rx="2" ry="2" />
<text  x="1106.91" y="143.5" >H..</text>
</g>
<g >
<title>memcpy (26 samples, 0.05%)</title><rect x="1186.3" y="181" width="0.6" height="15.0" fill="rgb(231,202,42)" rx="2" ry="2" />
<text  x="1189.33" y="191.5" ></text>
</g>
<g >
<title>BIT_readBitsFast (70 samples, 0.14%)</title><rect x="1179.4" y="213" width="1.6" height="15.0" fill="rgb(212,10,34)" rx="2" ry="2" />
<text  x="1182.35" y="223.5" ></text>
</g>
<g >
<title>ZSTD_decompressBlock_internal (2,264 samples, 4.54%)</title><rect x="1136.2" y="293" width="53.6" height="15.0" fill="rgb(209,117,29)" rx="2" ry="2" />
<text  x="1139.23" y="303.5" >ZSTD_..</text>
</g>
<g >
<title>memset (7 samples, 0.01%)</title><rect x="1096.2" y="101" width="0.2" height="15.0" fill="rgb(239,38,31)" rx="2" ry="2" />
<text  x="1099.24" y="111.5" ></text>
</g>
<g >
<title>BIT_addBitsFast (256 samples, 0.51%)</title><rect x="1119.8" y="69" width="6.0" height="15.0" fill="rgb(230,138,15)" rx="2" ry="2" />
<text  x="1122.76" y="79.5" ></text>
</g>
<g >
<title>ZSTD_storeSeq (229 samples, 0.46%)</title><rect x="1075.4" y="197" width="5.4" height="15.0" fill="rgb(235,156,27)" rx="2" ry="2" />
<text  x="1078.37" y="207.5" ></text>
</g>
<g >
<title>FSE_buildCTable_wksp (11 samples, 0.02%)</title><rect x="1126.0" y="133" width="0.2" height="15.0" fill="rgb(237,68,20)" rx="2" ry="2" />
<text  x="1128.99" y="143.5" ></text>
</g>
<g >
<title>__TMC_END__ (16 samples, 0.03%)</title><rect x="68.2" y="469" width="0.4" height="15.0" fill="rgb(221,195,19)" rx="2" ry="2" />
<text  x="71.19" y="479.5" ></text>
</g>
<g >
<title>?? (16 samples, 0.03%)</title><rect x="1135.8" y="293" width="0.3" height="15.0" fill="rgb(242,75,8)" rx="2" ry="2" />
<text  x="1138.76" y="303.5" ></text>
</g>
<g >
<title>MEM_writeLE64 (37 samples, 0.07%)</title><rect x="1110.0" y="53" width="0.9" height="15.0" fill="rgb(225,212,53)" rx="2" ry="2" />
<text  x="1113.04" y="63.5" ></text>
</g>
<g >
<title>ZSTD_buildSeqStore (4,160 samples, 8.34%)</title><rect x="982.7" y="245" width="98.4" height="15.0" fill="rgb(234,188,45)" rx="2" ry="2" />
<text  x="985.65" y="255.5" >ZSTD_buildS..</text>
</g>
<g >
<title>DecodeVLE (4,512 samples, 9.05%)</title><rect x="442.4" y="373" width="106.8" height="15.0" fill="rgb(207,175,1)" rx="2" ry="2" />
<text  x="445.40" y="383.5" >DecodeVLE</text>
</g>
<g >
<title>memcpy (227 samples, 0.46%)</title><rect x="1161.3" y="213" width="5.4" height="15.0" fill="rgb(234,61,30)" rx="2" ry="2" />
<text  x="1164.34" y="223.5" ></text>
</g>
<g >
<title>?? (16 samples, 0.03%)</title><rect x="1135.8" y="309" width="0.3" height="15.0" fill="rgb(238,70,16)" rx="2" ry="2" />
<text  x="1138.76" y="319.5" ></text>
</g>
<g >
<title>ZSTD_storeLastLiterals (10 samples, 0.02%)</title><rect x="1080.9" y="229" width="0.2" height="15.0" fill="rgb(214,60,45)" rx="2" ry="2" />
<text  x="1083.86" y="239.5" ></text>
</g>
<g >
<title>zdepth::AzureKinectDequantizeDepth (13 samples, 0.03%)</title><rect x="723.0" y="357" width="0.3" height="15.0" fill="rgb(209,206,35)" rx="2" ry="2" />
<text  x="725.98" y="367.5" ></text>
</g>
<g >
<title>ZSTD_buildFSETable (48 samples, 0.10%)</title><rect x="1173.6" y="245" width="1.1" height="15.0" fill="rgb(225,171,4)" rx="2" ry="2" />
<text  x="1176.55" y="255.5" ></text>
</g>
<g >
<title>ZSTD_compress_advanced_internal (6,488 samples, 13.01%)</title><rect x="982.0" y="325" width="153.5" height="15.0" fill="rgb(236,170,12)" rx="2" ry="2" />
<text  x="984.99" y="335.5" >ZSTD_compress_advan..</text>
</g>
<g >
<title>HUF_compress4X_repeat (1,776 samples, 3.56%)</title><rect x="1085.5" y="197" width="42.0" height="15.0" fill="rgb(247,173,45)" rx="2" ry="2" />
<text  x="1088.45" y="207.5" >HUF..</text>
</g>
<g >
<title>ZSTD_decompressDCtx (2,265 samples, 4.54%)</title><rect x="1136.2" y="357" width="53.6" height="15.0" fill="rgb(239,91,46)" rx="2" ry="2" />
<text  x="1139.23" y="367.5" >ZSTD_..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (7 samples, 0.01%)</title><rect x="350.0" y="357" width="0.1" height="15.0" fill="rgb(253,126,42)" rx="2" ry="2" />
<text  x="352.96" y="367.5" ></text>
</g>
<g >
<title>BIT_skipBits (9 samples, 0.02%)</title><rect x="1183.2" y="181" width="0.2" height="15.0" fill="rgb(209,40,44)" rx="2" ry="2" />
<text  x="1186.16" y="191.5" ></text>
</g>
<g >
<title>FSE_encodeSymbol (130 samples, 0.26%)</title><rect x="1130.7" y="181" width="3.1" height="15.0" fill="rgb(247,177,43)" rx="2" ry="2" />
<text  x="1133.72" y="191.5" ></text>
</g>
<g >
<title>ZSTD_copy8 (26 samples, 0.05%)</title><rect x="1186.3" y="197" width="0.6" height="15.0" fill="rgb(224,218,48)" rx="2" ry="2" />
<text  x="1189.33" y="207.5" ></text>
</g>
<g >
<title>load_elf_binary (6 samples, 0.01%)</title><rect x="10.0" y="389" width="0.1" height="15.0" fill="rgb(212,52,30)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>MEM_read32 (168 samples, 0.34%)</title><rect x="1058.4" y="197" width="4.0" height="15.0" fill="rgb(231,215,1)" rx="2" ry="2" />
<text  x="1061.38" y="207.5" ></text>
</g>
<g >
<title>HIST_count_parallel_wksp (460 samples, 0.92%)</title><rect x="1085.5" y="117" width="10.9" height="15.0" fill="rgb(221,105,42)" rx="2" ry="2" />
<text  x="1088.52" y="127.5" ></text>
</g>
<g >
<title>HUF_fillDTableX2Level2 (165 samples, 0.33%)</title><rect x="1168.0" y="197" width="3.9" height="15.0" fill="rgb(224,2,43)" rx="2" ry="2" />
<text  x="1171.04" y="207.5" ></text>
</g>
<g >
<title>HUF_compress1X_usingCTable_internal_body (926 samples, 1.86%)</title><rect x="1103.9" y="101" width="21.9" height="15.0" fill="rgb(217,151,0)" rx="2" ry="2" />
<text  x="1106.91" y="111.5" >H..</text>
</g>
<g >
<title>ZSTD_compress_frameChunk (6,459 samples, 12.95%)</title><rect x="982.6" y="277" width="152.9" height="15.0" fill="rgb(247,106,34)" rx="2" ry="2" />
<text  x="985.63" y="287.5" >ZSTD_compress_frame..</text>
</g>
<g >
<title>ZSTD_compressContinue_internal (6,460 samples, 12.96%)</title><rect x="982.6" y="293" width="152.9" height="15.0" fill="rgb(253,8,30)" rx="2" ry="2" />
<text  x="985.63" y="303.5" >ZSTD_compressContin..</text>
</g>
<g >
<title>ZSTD_LLcode (8 samples, 0.02%)</title><rect x="1134.9" y="197" width="0.2" height="15.0" fill="rgb(242,52,14)" rx="2" ry="2" />
<text  x="1137.89" y="207.5" ></text>
</g>
<g >
<title>all (49,864 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(208,135,53)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (521 samples, 1.04%)</title><rect x="549.2" y="373" width="12.3" height="15.0" fill="rgb(229,98,5)" rx="2" ry="2" />
<text  x="552.17" y="383.5" ></text>
</g>
<g >
<title>?? (180 samples, 0.36%)</title><rect x="562.4" y="293" width="4.2" height="15.0" fill="rgb(231,215,44)" rx="2" ry="2" />
<text  x="565.37" y="303.5" ></text>
</g>
<g >
<title>ZSTD_decompressSequences_bmi2 (638 samples, 1.28%)</title><rect x="1174.7" y="261" width="15.1" height="15.0" fill="rgb(214,130,10)" rx="2" ry="2" />
<text  x="1177.71" y="271.5" ></text>
</g>
<g >
<title>MEM_readLEST (13 samples, 0.03%)</title><rect x="1146.1" y="213" width="0.4" height="15.0" fill="rgb(250,10,49)" rx="2" ry="2" />
<text  x="1149.15" y="223.5" ></text>
</g>
<g >
<title>ZSTD_compressBlock_fast_generic (4,149 samples, 8.32%)</title><rect x="982.7" y="213" width="98.1" height="15.0" fill="rgb(212,66,46)" rx="2" ry="2" />
<text  x="985.65" y="223.5" >ZSTD_compre..</text>
</g>
<g >
<title>zdepth::QuantizeDepthImage (263 samples, 0.53%)</title><rect x="62.0" y="453" width="6.2" height="15.0" fill="rgb(239,63,3)" rx="2" ry="2" />
<text  x="64.97" y="463.5" ></text>
</g>
<g >
<title>BIT_skipBits (71 samples, 0.14%)</title><rect x="1159.7" y="213" width="1.6" height="15.0" fill="rgb(222,116,0)" rx="2" ry="2" />
<text  x="1162.66" y="223.5" ></text>
</g>
<g >
<title>BIT_flushBits (22 samples, 0.04%)</title><rect x="1130.2" y="181" width="0.5" height="15.0" fill="rgb(235,216,1)" rx="2" ry="2" />
<text  x="1133.20" y="191.5" ></text>
</g>
<g >
<title>FSE_readNCount (19 samples, 0.04%)</title><rect x="1173.1" y="245" width="0.5" height="15.0" fill="rgb(223,215,27)" rx="2" ry="2" />
<text  x="1176.10" y="255.5" ></text>
</g>
<g >
<title>ZSTD_compressBegin_internal (27 samples, 0.05%)</title><rect x="982.0" y="309" width="0.6" height="15.0" fill="rgb(237,50,33)" rx="2" ry="2" />
<text  x="984.99" y="319.5" ></text>
</g>
<g >
<title>BIT_addBits (15 samples, 0.03%)</title><rect x="1126.7" y="101" width="0.3" height="15.0" fill="rgb(254,9,33)" rx="2" ry="2" />
<text  x="1129.67" y="111.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="1080.9" y="197" width="0.2" height="15.0" fill="rgb(237,82,32)" rx="2" ry="2" />
<text  x="1083.86" y="207.5" ></text>
</g>
<g >
<title>HUF_compress_internal (1,776 samples, 3.56%)</title><rect x="1085.5" y="181" width="42.0" height="15.0" fill="rgb(235,147,7)" rx="2" ry="2" />
<text  x="1088.45" y="191.5" >HUF..</text>
</g>
<g >
<title>apic_timer_interrupt (7 samples, 0.01%)</title><rect x="350.0" y="373" width="0.1" height="15.0" fill="rgb(216,82,47)" rx="2" ry="2" />
<text  x="352.96" y="383.5" ></text>
</g>
<g >
<title>MEM_read64 (13 samples, 0.03%)</title><rect x="1146.1" y="181" width="0.4" height="15.0" fill="rgb(250,182,50)" rx="2" ry="2" />
<text  x="1149.15" y="191.5" ></text>
</g>
<g >
<title>HUF_decompress4X2_DCtx_wksp_bmi2 (268 samples, 0.54%)</title><rect x="1166.7" y="245" width="6.4" height="15.0" fill="rgb(236,56,21)" rx="2" ry="2" />
<text  x="1169.74" y="255.5" ></text>
</g>
<g >
<title>BIT_lookBitsFast (104 samples, 0.21%)</title><rect x="1157.2" y="213" width="2.5" height="15.0" fill="rgb(207,165,43)" rx="2" ry="2" />
<text  x="1160.20" y="223.5" ></text>
</g>
<g >
<title>FSE_normalizeCount (15 samples, 0.03%)</title><rect x="1084.8" y="197" width="0.4" height="15.0" fill="rgb(226,145,25)" rx="2" ry="2" />
<text  x="1087.81" y="207.5" ></text>
</g>
<g >
<title>_start (44,637 samples, 89.52%)</title><rect x="133.6" y="469" width="1056.3" height="15.0" fill="rgb(206,11,12)" rx="2" ry="2" />
<text  x="136.62" y="479.5" >_start</text>
</g>
<g >
<title>HUF_writeCTable (68 samples, 0.14%)</title><rect x="1125.8" y="165" width="1.7" height="15.0" fill="rgb(254,3,40)" rx="2" ry="2" />
<text  x="1128.85" y="175.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (7 samples, 0.01%)</title><rect x="562.2" y="373" width="0.1" height="15.0" fill="rgb(228,207,21)" rx="2" ry="2" />
<text  x="565.16" y="383.5" ></text>
</g>
<g >
<title>MEM_read32 (20 samples, 0.04%)</title><rect x="1095.8" y="101" width="0.4" height="15.0" fill="rgb(249,31,32)" rx="2" ry="2" />
<text  x="1098.77" y="111.5" ></text>
</g>
<g >
<title>perf (6 samples, 0.01%)</title><rect x="10.0" y="485" width="0.1" height="15.0" fill="rgb(209,78,39)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>zdepth::DequantizeDepthImage (6,619 samples, 13.27%)</title><rect x="566.7" y="389" width="156.6" height="15.0" fill="rgb(225,34,30)" rx="2" ry="2" />
<text  x="569.66" y="399.5" >zdepth::DequantizeDe..</text>
</g>
<g >
<title>__vdso_clock_gettime (7 samples, 0.01%)</title><rect x="562.2" y="357" width="0.1" height="15.0" fill="rgb(228,81,31)" rx="2" ry="2" />
<text  x="565.16" y="367.5" ></text>
</g>
<g >
<title>[zdepth_test] (2,411 samples, 4.84%)</title><rect x="11.1" y="469" width="57.1" height="15.0" fill="rgb(219,221,37)" rx="2" ry="2" />
<text  x="14.14" y="479.5" >[zdept..</text>
</g>
<g >
<title>ZSTD_encodeSequences_body (266 samples, 0.53%)</title><rect x="1127.5" y="197" width="6.3" height="15.0" fill="rgb(216,119,10)" rx="2" ry="2" />
<text  x="1130.53" y="207.5" ></text>
</g>
<g >
<title>HIST_countFast_wksp (460 samples, 0.92%)</title><rect x="1085.5" y="133" width="10.9" height="15.0" fill="rgb(205,200,35)" rx="2" ry="2" />
<text  x="1088.52" y="143.5" ></text>
</g>
<g >
<title>ZSTD_updateFseState (100 samples, 0.20%)</title><rect x="1181.0" y="213" width="2.4" height="15.0" fill="rgb(212,42,38)" rx="2" ry="2" />
<text  x="1184.01" y="223.5" ></text>
</g>
<g >
<title>BIT_lookBitsFast (46 samples, 0.09%)</title><rect x="1179.4" y="197" width="1.0" height="15.0" fill="rgb(242,99,41)" rx="2" ry="2" />
<text  x="1182.35" y="207.5" ></text>
</g>
<g >
<title>BIT_readBits (51 samples, 0.10%)</title><rect x="1182.2" y="197" width="1.2" height="15.0" fill="rgb(209,175,52)" rx="2" ry="2" />
<text  x="1185.17" y="207.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="1173.4" y="213" width="0.2" height="15.0" fill="rgb(242,65,35)" rx="2" ry="2" />
<text  x="1176.41" y="223.5" ></text>
</g>
<g >
<title>HUF_fillDTableX2 (211 samples, 0.42%)</title><rect x="1167.0" y="213" width="4.9" height="15.0" fill="rgb(238,152,29)" rx="2" ry="2" />
<text  x="1169.95" y="223.5" ></text>
</g>
<g >
<title>MEM_readLE64 (13 samples, 0.03%)</title><rect x="1146.1" y="197" width="0.4" height="15.0" fill="rgb(238,77,31)" rx="2" ry="2" />
<text  x="1149.15" y="207.5" ></text>
</g>
<g >
<title>ZSTD_compressCCtx (6,489 samples, 13.01%)</title><rect x="982.0" y="357" width="153.5" height="15.0" fill="rgb(220,88,42)" rx="2" ry="2" />
<text  x="984.99" y="367.5" >ZSTD_compressCCtx</text>
</g>
<g >
<title>FSE_buildCTable_wksp (64 samples, 0.13%)</title><rect x="1083.3" y="197" width="1.5" height="15.0" fill="rgb(206,207,22)" rx="2" ry="2" />
<text  x="1086.30" y="207.5" ></text>
</g>
<g >
<title>HUF_decompress4X2_usingDTable_internal_bmi2 (1,289 samples, 2.59%)</title><rect x="1136.2" y="261" width="30.5" height="15.0" fill="rgb(239,191,33)" rx="2" ry="2" />
<text  x="1139.23" y="271.5" >HU..</text>
</g>
<g >
<title>HUF_buildCTable_wksp (317 samples, 0.64%)</title><rect x="1096.4" y="165" width="7.5" height="15.0" fill="rgb(234,102,17)" rx="2" ry="2" />
<text  x="1099.41" y="175.5" ></text>
</g>
<g >
<title>memcpy (166 samples, 0.33%)</title><rect x="1150.4" y="197" width="3.9" height="15.0" fill="rgb(212,88,16)" rx="2" ry="2" />
<text  x="1153.39" y="207.5" ></text>
</g>
<g >
<title>BIT_readBitsFast (6 samples, 0.01%)</title><rect x="1172.7" y="133" width="0.2" height="15.0" fill="rgb(246,24,46)" rx="2" ry="2" />
<text  x="1175.75" y="143.5" ></text>
</g>
<g >
<title>RVL_compress (44,634 samples, 89.51%)</title><rect x="133.6" y="405" width="1056.3" height="15.0" fill="rgb(216,65,52)" rx="2" ry="2" />
<text  x="136.62" y="415.5" >RVL_compress</text>
</g>
<g >
<title>ZSTD_buildCTable (89 samples, 0.18%)</title><rect x="1083.3" y="213" width="2.1" height="15.0" fill="rgb(218,6,37)" rx="2" ry="2" />
<text  x="1086.27" y="223.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.06%)</title><rect x="10.4" y="469" width="0.7" height="15.0" fill="rgb(238,133,20)" rx="2" ry="2" />
<text  x="13.38" y="479.5" ></text>
</g>
<g >
<title>HUF_decodeSymbolX2 (524 samples, 1.05%)</title><rect x="1154.3" y="229" width="12.4" height="15.0" fill="rgb(219,51,13)" rx="2" ry="2" />
<text  x="1157.31" y="239.5" ></text>
</g>
<g >
<title>CompressRVL (9,153 samples, 18.36%)</title><rect x="133.6" y="389" width="216.6" height="15.0" fill="rgb(237,137,21)" rx="2" ry="2" />
<text  x="136.62" y="399.5" >CompressRVL</text>
</g>
<g >
<title>ZSTD_copy8 (41 samples, 0.08%)</title><rect x="1079.8" y="165" width="1.0" height="15.0" fill="rgb(211,105,30)" rx="2" ry="2" />
<text  x="1082.82" y="175.5" ></text>
</g>
<g >
<title>HUF_setMaxHeight (18 samples, 0.04%)</title><rect x="1098.7" y="149" width="0.5" height="15.0" fill="rgb(252,98,2)" rx="2" ry="2" />
<text  x="1101.73" y="159.5" ></text>
</g>
<g >
<title>EncodeVLE (4,660 samples, 9.35%)</title><rect x="239.7" y="373" width="110.3" height="15.0" fill="rgb(209,222,8)" rx="2" ry="2" />
<text  x="242.69" y="383.5" >EncodeVLE</text>
</g>
<g >
<title>FSE_readNCount (7 samples, 0.01%)</title><rect x="1172.9" y="181" width="0.2" height="15.0" fill="rgb(211,56,23)" rx="2" ry="2" />
<text  x="1175.91" y="191.5" ></text>
</g>
<g >
<title>GetTimeUsec (9 samples, 0.02%)</title><rect x="562.1" y="389" width="0.2" height="15.0" fill="rgb(233,194,5)" rx="2" ry="2" />
<text  x="565.11" y="399.5" ></text>
</g>
<g >
<title>ZSTD_hashPtr (445 samples, 0.89%)</title><rect x="1064.8" y="197" width="10.6" height="15.0" fill="rgb(227,113,7)" rx="2" ry="2" />
<text  x="1067.84" y="207.5" ></text>
</g>
<g >
<title>ZSTD_decodeLiteralsBlock (1,558 samples, 3.12%)</title><rect x="1136.2" y="277" width="36.9" height="15.0" fill="rgb(227,36,19)" rx="2" ry="2" />
<text  x="1139.23" y="287.5" >ZST..</text>
</g>
<g >
<title>ZSTD_copy8 (14 samples, 0.03%)</title><rect x="1189.2" y="197" width="0.3" height="15.0" fill="rgb(249,198,27)" rx="2" ry="2" />
<text  x="1192.20" y="207.5" ></text>
</g>
<g >
<title>HUF_compress4X_usingCTable_internal (926 samples, 1.86%)</title><rect x="1103.9" y="149" width="21.9" height="15.0" fill="rgb(226,229,2)" rx="2" ry="2" />
<text  x="1106.91" y="159.5" >H..</text>
</g>
<g >
<title>ZSTD_highbit32 (8 samples, 0.02%)</title><rect x="1134.9" y="181" width="0.2" height="15.0" fill="rgb(238,27,5)" rx="2" ry="2" />
<text  x="1137.89" y="191.5" ></text>
</g>
<g >
<title>perf_event_exec (6 samples, 0.01%)</title><rect x="10.0" y="357" width="0.1" height="15.0" fill="rgb(214,228,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>ZSTD_decodeSeqHeaders (67 samples, 0.13%)</title><rect x="1173.1" y="277" width="1.6" height="15.0" fill="rgb(209,47,16)" rx="2" ry="2" />
<text  x="1176.10" y="287.5" ></text>
</g>
<g >
<title>zdepth::ZstdDecompress (2,270 samples, 4.55%)</title><rect x="1136.1" y="389" width="53.8" height="15.0" fill="rgb(212,155,21)" rx="2" ry="2" />
<text  x="1139.14" y="399.5" >zdept..</text>
</g>
<g >
<title>?? (180 samples, 0.36%)</title><rect x="562.4" y="325" width="4.2" height="15.0" fill="rgb(253,109,2)" rx="2" ry="2" />
<text  x="565.37" y="335.5" ></text>
</g>
<g >
<title>HUF_readStats (48 samples, 0.10%)</title><rect x="1171.9" y="213" width="1.2" height="15.0" fill="rgb(212,107,26)" rx="2" ry="2" />
<text  x="1174.94" y="223.5" ></text>
</g>
<g >
<title>BIT_flushBits (273 samples, 0.55%)</title><rect x="1104.5" y="85" width="6.4" height="15.0" fill="rgb(231,28,25)" rx="2" ry="2" />
<text  x="1107.45" y="95.5" ></text>
</g>
<g >
<title>ZSTD_buildSeqTable (67 samples, 0.13%)</title><rect x="1173.1" y="261" width="1.6" height="15.0" fill="rgb(242,20,32)" rx="2" ry="2" />
<text  x="1176.10" y="271.5" ></text>
</g>
<g >
<title>ZSTD_decompressMultiFrame (2,265 samples, 4.54%)</title><rect x="1136.2" y="325" width="53.6" height="15.0" fill="rgb(248,113,26)" rx="2" ry="2" />
<text  x="1139.23" y="335.5" >ZSTD_..</text>
</g>
<g >
<title>MEM_write64 (37 samples, 0.07%)</title><rect x="1110.0" y="37" width="0.9" height="15.0" fill="rgb(212,4,31)" rx="2" ry="2" />
<text  x="1113.04" y="47.5" ></text>
</g>
<g >
<title>ctx_resched (6 samples, 0.01%)</title><rect x="10.0" y="341" width="0.1" height="15.0" fill="rgb(206,124,38)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>setup_new_exec (6 samples, 0.01%)</title><rect x="10.0" y="373" width="0.1" height="15.0" fill="rgb(222,143,45)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>HUF_compressWeights (62 samples, 0.12%)</title><rect x="1126.0" y="149" width="1.5" height="15.0" fill="rgb(221,15,23)" rx="2" ry="2" />
<text  x="1128.99" y="159.5" ></text>
</g>
<g >
<title>HUF_decompress4X2_usingDTable_internal_body (1,289 samples, 2.59%)</title><rect x="1136.2" y="245" width="30.5" height="15.0" fill="rgb(226,17,32)" rx="2" ry="2" />
<text  x="1139.23" y="255.5" >HU..</text>
</g>
<g >
<title>?? (180 samples, 0.36%)</title><rect x="562.4" y="309" width="4.2" height="15.0" fill="rgb(206,106,7)" rx="2" ry="2" />
<text  x="565.37" y="319.5" ></text>
</g>
<g >
<title>ZSTD_decompressSequences_body (638 samples, 1.28%)</title><rect x="1174.7" y="245" width="15.1" height="15.0" fill="rgb(205,222,54)" rx="2" ry="2" />
<text  x="1177.71" y="255.5" ></text>
</g>
<g >
<title>ZSTD_reset_matchState (22 samples, 0.04%)</title><rect x="982.0" y="277" width="0.5" height="15.0" fill="rgb(233,82,43)" rx="2" ry="2" />
<text  x="985.01" y="287.5" ></text>
</g>
<g >
<title>HIST_count_simple (9 samples, 0.02%)</title><rect x="1127.2" y="133" width="0.3" height="15.0" fill="rgb(214,105,7)" rx="2" ry="2" />
<text  x="1130.24" y="143.5" ></text>
</g>
<g >
<title>RVL_compress (182 samples, 0.36%)</title><rect x="562.3" y="389" width="4.3" height="15.0" fill="rgb(225,73,51)" rx="2" ry="2" />
<text  x="565.33" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (15 samples, 0.03%)</title><rect x="68.2" y="453" width="0.4" height="15.0" fill="rgb(252,108,6)" rx="2" ry="2" />
<text  x="71.21" y="463.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (12 samples, 0.02%)</title><rect x="1083.0" y="165" width="0.3" height="15.0" fill="rgb(242,65,52)" rx="2" ry="2" />
<text  x="1085.97" y="175.5" ></text>
</g>
<g >
<title>MEM_readST (12 samples, 0.02%)</title><rect x="1063.7" y="181" width="0.3" height="15.0" fill="rgb(247,23,31)" rx="2" ry="2" />
<text  x="1066.70" y="191.5" ></text>
</g>
<g >
<title>FSE_buildDTable (7 samples, 0.01%)</title><rect x="1172.2" y="181" width="0.2" height="15.0" fill="rgb(205,73,29)" rx="2" ry="2" />
<text  x="1175.20" y="191.5" ></text>
</g>
<g >
<title>HUF_decompress4X_hufOnly_wksp_bmi2 (269 samples, 0.54%)</title><rect x="1166.7" y="261" width="6.4" height="15.0" fill="rgb(254,140,52)" rx="2" ry="2" />
<text  x="1169.74" y="271.5" ></text>
</g>
<g >
<title>zdepth::AzureKinectDequantizeDepth (4,667 samples, 9.36%)</title><rect x="612.8" y="373" width="110.5" height="15.0" fill="rgb(245,162,18)" rx="2" ry="2" />
<text  x="615.85" y="383.5" >zdepth::Azure..</text>
</g>
<g >
<title>BIT_skipBits (5 samples, 0.01%)</title><rect x="1150.3" y="197" width="0.1" height="15.0" fill="rgb(234,173,6)" rx="2" ry="2" />
<text  x="1153.27" y="207.5" ></text>
</g>
<g >
<title>ZSTD_decompressFrame (2,265 samples, 4.54%)</title><rect x="1136.2" y="309" width="53.6" height="15.0" fill="rgb(249,132,42)" rx="2" ry="2" />
<text  x="1139.23" y="319.5" >ZSTD_..</text>
</g>
<g >
<title>ZSTD_seqToCodes (69 samples, 0.14%)</title><rect x="1133.8" y="213" width="1.7" height="15.0" fill="rgb(233,127,33)" rx="2" ry="2" />
<text  x="1136.84" y="223.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (12 samples, 0.02%)</title><rect x="1135.8" y="245" width="0.2" height="15.0" fill="rgb(246,115,11)" rx="2" ry="2" />
<text  x="1138.76" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (180 samples, 0.36%)</title><rect x="562.4" y="373" width="4.2" height="15.0" fill="rgb(243,222,4)" rx="2" ry="2" />
<text  x="565.37" y="383.5" ></text>
</g>
<g >
<title>HIST_countFast_wksp (85 samples, 0.17%)</title><rect x="1081.3" y="213" width="2.0" height="15.0" fill="rgb(228,221,28)" rx="2" ry="2" />
<text  x="1084.26" y="223.5" ></text>
</g>
<g >
<title>MEM_readLE64 (21 samples, 0.04%)</title><rect x="1147.6" y="181" width="0.5" height="15.0" fill="rgb(240,116,8)" rx="2" ry="2" />
<text  x="1150.59" y="191.5" ></text>
</g>
<g >
<title>ZSTD_count (105 samples, 0.21%)</title><rect x="1062.4" y="197" width="2.4" height="15.0" fill="rgb(253,191,0)" rx="2" ry="2" />
<text  x="1065.35" y="207.5" ></text>
</g>
<g >
<title>zdepth_test (49,858 samples, 99.99%)</title><rect x="10.1" y="485" width="1179.9" height="15.0" fill="rgb(226,127,42)" rx="2" ry="2" />
<text  x="13.14" y="495.5" >zdepth_test</text>
</g>
<g >
<title>zdepth::AzureKinectQuantizeDepth (8,768 samples, 17.58%)</title><rect x="774.5" y="373" width="207.5" height="15.0" fill="rgb(231,174,9)" rx="2" ry="2" />
<text  x="777.48" y="383.5" >zdepth::AzureKinectQuantize..</text>
</g>
<g >
<title>ZSTD_compress_usingDict (6,489 samples, 13.01%)</title><rect x="982.0" y="341" width="153.5" height="15.0" fill="rgb(243,191,32)" rx="2" ry="2" />
<text  x="984.99" y="351.5" >ZSTD_compress_using..</text>
</g>
<g >
<title>ZSTD_hash6Ptr (445 samples, 0.89%)</title><rect x="1064.8" y="181" width="10.6" height="15.0" fill="rgb(242,71,37)" rx="2" ry="2" />
<text  x="1067.84" y="191.5" ></text>
</g>
<g >
<title>ZSTD_compressEnd (6,461 samples, 12.96%)</title><rect x="982.6" y="309" width="152.9" height="15.0" fill="rgb(221,4,2)" rx="2" ry="2" />
<text  x="985.63" y="319.5" >ZSTD_compressEnd</text>
</g>
<g >
<title>memcpy (10 samples, 0.02%)</title><rect x="1189.6" y="229" width="0.2" height="15.0" fill="rgb(235,116,3)" rx="2" ry="2" />
<text  x="1192.57" y="239.5" ></text>
</g>
<g >
<title>memset (13 samples, 0.03%)</title><rect x="1083.0" y="181" width="0.3" height="15.0" fill="rgb(250,140,0)" rx="2" ry="2" />
<text  x="1085.97" y="191.5" ></text>
</g>
<g >
<title>main (44,635 samples, 89.51%)</title><rect x="133.6" y="437" width="1056.3" height="15.0" fill="rgb(226,79,6)" rx="2" ry="2" />
<text  x="136.62" y="447.5" >main</text>
</g>
<g >
<title>__dso_handle (2,749 samples, 5.51%)</title><rect x="68.6" y="469" width="65.0" height="15.0" fill="rgb(253,105,47)" rx="2" ry="2" />
<text  x="71.57" y="479.5" >__dso_h..</text>
</g>
<g >
<title>BIT_lookBits (42 samples, 0.08%)</title><rect x="1182.2" y="181" width="1.0" height="15.0" fill="rgb(208,55,7)" rx="2" ry="2" />
<text  x="1185.17" y="191.5" ></text>
</g>
<g >
<title>ZSTD_copy8 (19 samples, 0.04%)</title><rect x="1185.5" y="213" width="0.4" height="15.0" fill="rgb(208,183,31)" rx="2" ry="2" />
<text  x="1188.46" y="223.5" ></text>
</g>
<g >
<title>ZSTD_compressBlock_fast (4,149 samples, 8.32%)</title><rect x="982.7" y="229" width="98.1" height="15.0" fill="rgb(246,50,12)" rx="2" ry="2" />
<text  x="985.65" y="239.5" >ZSTD_compre..</text>
</g>
<g >
<title>memcpy (10 samples, 0.02%)</title><rect x="1080.9" y="213" width="0.2" height="15.0" fill="rgb(215,185,3)" rx="2" ry="2" />
<text  x="1083.86" y="223.5" ></text>
</g>
<g >
<title>memset (22 samples, 0.04%)</title><rect x="982.0" y="261" width="0.5" height="15.0" fill="rgb(219,224,24)" rx="2" ry="2" />
<text  x="985.01" y="271.5" ></text>
</g>
<g >
<title>BIT_reloadDStream (294 samples, 0.59%)</title><rect x="1139.5" y="229" width="7.0" height="15.0" fill="rgb(214,188,37)" rx="2" ry="2" />
<text  x="1142.52" y="239.5" ></text>
</g>
<g >
<title>FSE_encodeSymbol (31 samples, 0.06%)</title><rect x="1126.3" y="117" width="0.7" height="15.0" fill="rgb(219,88,14)" rx="2" ry="2" />
<text  x="1129.30" y="127.5" ></text>
</g>
<g >
<title>?? (16 samples, 0.03%)</title><rect x="1135.8" y="277" width="0.3" height="15.0" fill="rgb(241,150,28)" rx="2" ry="2" />
<text  x="1138.76" y="287.5" ></text>
</g>
<g >
<title>MEM_read64 (21 samples, 0.04%)</title><rect x="1147.6" y="165" width="0.5" height="15.0" fill="rgb(242,20,31)" rx="2" ry="2" />
<text  x="1150.59" y="175.5" ></text>
</g>
<g >
<title>BIT_reloadDStream (45 samples, 0.09%)</title><rect x="1147.0" y="213" width="1.1" height="15.0" fill="rgb(232,211,27)" rx="2" ry="2" />
<text  x="1150.03" y="223.5" ></text>
</g>
<g >
<title>search_binary_handler (6 samples, 0.01%)</title><rect x="10.0" y="405" width="0.1" height="15.0" fill="rgb(214,3,39)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>MEM_readLEST (21 samples, 0.04%)</title><rect x="1147.6" y="197" width="0.5" height="15.0" fill="rgb(213,179,42)" rx="2" ry="2" />
<text  x="1150.59" y="207.5" ></text>
</g>
<g >
<title>HUF_compressCTable_internal (926 samples, 1.86%)</title><rect x="1103.9" y="165" width="21.9" height="15.0" fill="rgb(217,1,35)" rx="2" ry="2" />
<text  x="1106.91" y="175.5" >H..</text>
</g>
<g >
<title>ZSTD_wildcopy (44 samples, 0.09%)</title><rect x="1185.9" y="213" width="1.0" height="15.0" fill="rgb(210,87,14)" rx="2" ry="2" />
<text  x="1188.91" y="223.5" ></text>
</g>
<g >
<title>ZSTD_wildcopy_16min (109 samples, 0.22%)</title><rect x="1186.9" y="213" width="2.6" height="15.0" fill="rgb(216,146,13)" rx="2" ry="2" />
<text  x="1189.95" y="223.5" ></text>
</g>
<g >
<title>HUF_readDTableX2_wksp (268 samples, 0.54%)</title><rect x="1166.7" y="229" width="6.4" height="15.0" fill="rgb(242,69,3)" rx="2" ry="2" />
<text  x="1169.74" y="239.5" ></text>
</g>
<g >
<title>ZSTD_compressSequences_internal (2,297 samples, 4.61%)</title><rect x="1081.1" y="229" width="54.4" height="15.0" fill="rgb(237,183,31)" rx="2" ry="2" />
<text  x="1084.12" y="239.5" >ZSTD_..</text>
</g>
<g >
<title>HIST_count_simple (85 samples, 0.17%)</title><rect x="1081.3" y="197" width="2.0" height="15.0" fill="rgb(227,149,20)" rx="2" ry="2" />
<text  x="1084.26" y="207.5" ></text>
</g>
<g >
<title>BIT_skipBits (24 samples, 0.05%)</title><rect x="1180.4" y="197" width="0.6" height="15.0" fill="rgb(216,60,50)" rx="2" ry="2" />
<text  x="1183.44" y="207.5" ></text>
</g>
<g >
<title>ZSTD_compress (6,498 samples, 13.03%)</title><rect x="982.0" y="373" width="153.8" height="15.0" fill="rgb(246,213,22)" rx="2" ry="2" />
<text  x="984.99" y="383.5" >ZSTD_compress</text>
</g>
<g >
<title>ZSTD_NbCommonBytes (36 samples, 0.07%)</title><rect x="1064.0" y="181" width="0.8" height="15.0" fill="rgb(212,65,20)" rx="2" ry="2" />
<text  x="1066.99" y="191.5" ></text>
</g>
<g >
<title>ZSTD_compressLiterals (1,781 samples, 3.57%)</title><rect x="1085.4" y="213" width="42.1" height="15.0" fill="rgb(229,97,32)" rx="2" ry="2" />
<text  x="1088.38" y="223.5" >ZST..</text>
</g>
<g >
<title>memcpy (41 samples, 0.08%)</title><rect x="1079.8" y="149" width="1.0" height="15.0" fill="rgb(223,196,2)" rx="2" ry="2" />
<text  x="1082.82" y="159.5" ></text>
</g>
<g >
<title>FSE_writeNCount (9 samples, 0.02%)</title><rect x="1085.2" y="197" width="0.2" height="15.0" fill="rgb(251,30,22)" rx="2" ry="2" />
<text  x="1088.17" y="207.5" ></text>
</g>
<g >
<title>memcpy (72 samples, 0.14%)</title><rect x="1187.5" y="181" width="1.7" height="15.0" fill="rgb(215,185,1)" rx="2" ry="2" />
<text  x="1190.49" y="191.5" ></text>
</g>
<g >
<title>?? (16 samples, 0.03%)</title><rect x="1135.8" y="325" width="0.3" height="15.0" fill="rgb(240,118,10)" rx="2" ry="2" />
<text  x="1138.76" y="335.5" ></text>
</g>
<g >
<title>zdepth::AzureKinectDequantizeDepth (1,919 samples, 3.85%)</title><rect x="11.1" y="453" width="45.4" height="15.0" fill="rgb(218,143,33)" rx="2" ry="2" />
<text  x="14.14" y="463.5" >zdep..</text>
</g>
<g >
<title>?? (16 samples, 0.03%)</title><rect x="1135.8" y="341" width="0.3" height="15.0" fill="rgb(217,78,25)" rx="2" ry="2" />
<text  x="1138.76" y="351.5" ></text>
</g>
<g >
<title>HUF_encodeSymbol (630 samples, 1.26%)</title><rect x="1110.9" y="85" width="14.9" height="15.0" fill="rgb(214,107,14)" rx="2" ry="2" />
<text  x="1113.91" y="95.5" ></text>
</g>
<g >
<title>zdepth::ZstdCompress (6,514 samples, 13.06%)</title><rect x="982.0" y="389" width="154.1" height="15.0" fill="rgb(249,67,27)" rx="2" ry="2" />
<text  x="984.99" y="399.5" >zdepth::ZstdCompress</text>
</g>
<g >
<title>FSE_compress_usingCTable_generic (32 samples, 0.06%)</title><rect x="1126.3" y="133" width="0.8" height="15.0" fill="rgb(248,40,17)" rx="2" ry="2" />
<text  x="1129.30" y="143.5" ></text>
</g>
<g >
<title>memcpy (14 samples, 0.03%)</title><rect x="1189.2" y="181" width="0.3" height="15.0" fill="rgb(211,1,52)" rx="2" ry="2" />
<text  x="1192.20" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (180 samples, 0.36%)</title><rect x="562.4" y="277" width="4.2" height="15.0" fill="rgb(208,195,45)" rx="2" ry="2" />
<text  x="565.37" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_execve (6 samples, 0.01%)</title><rect x="10.0" y="437" width="0.1" height="15.0" fill="rgb(228,138,48)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>ZSTD_hash6 (445 samples, 0.89%)</title><rect x="1064.8" y="165" width="10.6" height="15.0" fill="rgb(223,108,2)" rx="2" ry="2" />
<text  x="1067.84" y="175.5" ></text>
</g>
<g >
<title>BIT_getMiddleBits (22 samples, 0.04%)</title><rect x="1182.6" y="165" width="0.6" height="15.0" fill="rgb(244,85,23)" rx="2" ry="2" />
<text  x="1185.64" y="175.5" ></text>
</g>
<g >
<title>TestImage (44,634 samples, 89.51%)</title><rect x="133.6" y="421" width="1056.3" height="15.0" fill="rgb(253,118,24)" rx="2" ry="2" />
<text  x="136.62" y="431.5" >TestImage</text>
</g>
<g >
<title>zdepth::AzureKinectQuantizeDepth (24 samples, 0.05%)</title><rect x="981.4" y="357" width="0.6" height="15.0" fill="rgb(241,140,18)" rx="2" ry="2" />
<text  x="984.40" y="367.5" ></text>
</g>
<g >
<title>HUF_decodeSymbolX2 (263 samples, 0.53%)</title><rect x="1148.1" y="213" width="6.2" height="15.0" fill="rgb(227,200,7)" rx="2" ry="2" />
<text  x="1151.09" y="223.5" ></text>
</g>
<g >
<title>native_write_msr (5 samples, 0.01%)</title><rect x="10.0" y="277" width="0.1" height="15.0" fill="rgb(234,175,48)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (6 samples, 0.01%)</title><rect x="10.0" y="309" width="0.1" height="15.0" fill="rgb(231,182,22)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>FSE_writeNCount_generic (9 samples, 0.02%)</title><rect x="1085.2" y="181" width="0.2" height="15.0" fill="rgb(222,145,52)" rx="2" ry="2" />
<text  x="1088.17" y="191.5" ></text>
</g>
<g >
<title>?? (180 samples, 0.36%)</title><rect x="562.4" y="357" width="4.2" height="15.0" fill="rgb(227,163,11)" rx="2" ry="2" />
<text  x="565.37" y="367.5" ></text>
</g>
<g >
<title>ZSTD_decompress (2,270 samples, 4.55%)</title><rect x="1136.1" y="373" width="53.8" height="15.0" fill="rgb(233,127,34)" rx="2" ry="2" />
<text  x="1139.14" y="383.5" >ZSTD_..</text>
</g>
<g >
<title>[[heap]] (6 samples, 0.01%)</title><rect x="10.1" y="469" width="0.2" height="15.0" fill="rgb(233,185,35)" rx="2" ry="2" />
<text  x="13.14" y="479.5" ></text>
</g>
<g >
<title>ZSTD_copy16 (72 samples, 0.14%)</title><rect x="1187.5" y="197" width="1.7" height="15.0" fill="rgb(247,206,28)" rx="2" ry="2" />
<text  x="1190.49" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.01%)</title><rect x="10.0" y="453" width="0.1" height="15.0" fill="rgb(205,173,6)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>zdepth::QuantizeDepthImage (10,932 samples, 21.92%)</title><rect x="723.3" y="389" width="258.7" height="15.0" fill="rgb(243,14,33)" rx="2" ry="2" />
<text  x="726.29" y="399.5" >zdepth::QuantizeDepthImage</text>
</g>
<g >
<title>BIT_addBits (56 samples, 0.11%)</title><rect x="1132.5" y="165" width="1.3" height="15.0" fill="rgb(205,188,34)" rx="2" ry="2" />
<text  x="1135.47" y="175.5" ></text>
</g>
<g >
<title>__libc_start_main (44,635 samples, 89.51%)</title><rect x="133.6" y="453" width="1056.3" height="15.0" fill="rgb(243,15,31)" rx="2" ry="2" />
<text  x="136.62" y="463.5" >__libc_start_main</text>
</g>
<g >
<title>MEM_writeLEST (37 samples, 0.07%)</title><rect x="1110.0" y="69" width="0.9" height="15.0" fill="rgb(218,148,30)" rx="2" ry="2" />
<text  x="1113.04" y="79.5" ></text>
</g>
</g>
</svg>
