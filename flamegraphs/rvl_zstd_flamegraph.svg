<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="550.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="533" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="533" > </text>
<g id="frames">
<g >
<title>ZSTD_freeDCtx (4 samples, 0.01%)</title><rect x="1189.7" y="357" width="0.1" height="15.0" fill="rgb(210,107,4)" rx="2" ry="2" />
<text  x="1192.68" y="367.5" ></text>
</g>
<g >
<title>ZSTD_compress_advanced_internal (8,410 samples, 22.57%)</title><rect x="828.9" y="325" width="266.3" height="15.0" fill="rgb(242,136,35)" rx="2" ry="2" />
<text  x="831.86" y="335.5" >ZSTD_compress_advanced_internal</text>
</g>
<g >
<title>__TMC_END__ (15 samples, 0.04%)</title><rect x="11.6" y="469" width="0.5" height="15.0" fill="rgb(211,98,38)" rx="2" ry="2" />
<text  x="14.62" y="479.5" ></text>
</g>
<g >
<title>ZSTD_compressCCtx (8,413 samples, 22.58%)</title><rect x="828.9" y="357" width="266.4" height="15.0" fill="rgb(224,211,52)" rx="2" ry="2" />
<text  x="831.86" y="367.5" >ZSTD_compressCCtx</text>
</g>
<g >
<title>FSE_readNCount (9 samples, 0.02%)</title><rect x="1169.2" y="181" width="0.3" height="15.0" fill="rgb(220,85,17)" rx="2" ry="2" />
<text  x="1172.23" y="191.5" ></text>
</g>
<g >
<title>memcpy (23 samples, 0.06%)</title><rect x="992.6" y="213" width="0.7" height="15.0" fill="rgb(250,16,34)" rx="2" ry="2" />
<text  x="995.62" y="223.5" ></text>
</g>
<g >
<title>update_process_times (4 samples, 0.01%)</title><rect x="807.4" y="261" width="0.1" height="15.0" fill="rgb(241,200,16)" rx="2" ry="2" />
<text  x="810.42" y="271.5" ></text>
</g>
<g >
<title>MEM_readLEST (308 samples, 0.83%)</title><rect x="1122.5" y="213" width="9.8" height="15.0" fill="rgb(226,20,7)" rx="2" ry="2" />
<text  x="1125.55" y="223.5" ></text>
</g>
<g >
<title>ZSTD_compressSequences (3,215 samples, 8.63%)</title><rect x="993.3" y="245" width="101.9" height="15.0" fill="rgb(217,3,32)" rx="2" ry="2" />
<text  x="996.34" y="255.5" >ZSTD_compres..</text>
</g>
<g >
<title>ZSTD_copy8 (14 samples, 0.04%)</title><rect x="1188.6" y="197" width="0.4" height="15.0" fill="rgb(206,15,8)" rx="2" ry="2" />
<text  x="1191.61" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (11 samples, 0.03%)</title><rect x="1095.9" y="357" width="0.3" height="15.0" fill="rgb(237,152,52)" rx="2" ry="2" />
<text  x="1098.85" y="367.5" ></text>
</g>
<g >
<title>ZSTD_compressBlock_internal (8,377 samples, 22.48%)</title><rect x="829.9" y="261" width="265.3" height="15.0" fill="rgb(249,98,54)" rx="2" ry="2" />
<text  x="832.88" y="271.5" >ZSTD_compressBlock_internal</text>
</g>
<g >
<title>BIT_addBits (38 samples, 0.10%)</title><rect x="1087.7" y="181" width="1.2" height="15.0" fill="rgb(221,57,7)" rx="2" ry="2" />
<text  x="1090.68" y="191.5" ></text>
</g>
<g >
<title>FSE_encodeSymbol (13 samples, 0.03%)</title><rect x="1085.2" y="117" width="0.4" height="15.0" fill="rgb(252,61,36)" rx="2" ry="2" />
<text  x="1088.21" y="127.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.31 (6 samples, 0.02%)</title><rect x="10.0" y="293" width="0.2" height="15.0" fill="rgb(215,26,30)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>zdepth_test (37,256 samples, 99.98%)</title><rect x="10.2" y="485" width="1179.8" height="15.0" fill="rgb(206,84,52)" rx="2" ry="2" />
<text  x="13.19" y="495.5" >zdepth_test</text>
</g>
<g >
<title>MEM_read32 (51 samples, 0.14%)</title><rect x="1023.3" y="101" width="1.6" height="15.0" fill="rgb(225,183,9)" rx="2" ry="2" />
<text  x="1026.30" y="111.5" ></text>
</g>
<g >
<title>?? (11 samples, 0.03%)</title><rect x="1095.9" y="325" width="0.3" height="15.0" fill="rgb(236,172,31)" rx="2" ry="2" />
<text  x="1098.85" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.02%)</title><rect x="995.4" y="165" width="0.2" height="15.0" fill="rgb(246,146,28)" rx="2" ry="2" />
<text  x="998.37" y="175.5" ></text>
</g>
<g >
<title>ZSTD_createDCtx_advanced (7 samples, 0.02%)</title><rect x="1096.3" y="341" width="0.2" height="15.0" fill="rgb(251,101,39)" rx="2" ry="2" />
<text  x="1099.26" y="351.5" ></text>
</g>
<g >
<title>BIT_skipBits (22 samples, 0.06%)</title><rect x="1177.6" y="197" width="0.7" height="15.0" fill="rgb(235,140,31)" rx="2" ry="2" />
<text  x="1180.65" y="207.5" ></text>
</g>
<g >
<title>__do_execve_file.isra.39 (6 samples, 0.02%)</title><rect x="10.0" y="421" width="0.2" height="15.0" fill="rgb(214,40,24)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>memcpy (14 samples, 0.04%)</title><rect x="1188.6" y="181" width="0.4" height="15.0" fill="rgb(244,104,5)" rx="2" ry="2" />
<text  x="1191.61" y="191.5" ></text>
</g>
<g >
<title>ZSTD_createDCtx (7 samples, 0.02%)</title><rect x="1096.3" y="357" width="0.2" height="15.0" fill="rgb(214,1,6)" rx="2" ry="2" />
<text  x="1099.26" y="367.5" ></text>
</g>
<g >
<title>MEM_readLE64 (308 samples, 0.83%)</title><rect x="1122.5" y="197" width="9.8" height="15.0" fill="rgb(206,15,28)" rx="2" ry="2" />
<text  x="1125.55" y="207.5" ></text>
</g>
<g >
<title>ZSTD_freeDCtx (4 samples, 0.01%)</title><rect x="1189.7" y="341" width="0.1" height="15.0" fill="rgb(223,102,22)" rx="2" ry="2" />
<text  x="1192.68" y="351.5" ></text>
</g>
<g >
<title>HUF_compressCTable_internal (1,569 samples, 4.21%)</title><rect x="1035.0" y="165" width="49.7" height="15.0" fill="rgb(225,193,38)" rx="2" ry="2" />
<text  x="1037.99" y="175.5" >HUF_c..</text>
</g>
<g >
<title>ZSTD_copy16 (66 samples, 0.18%)</title><rect x="1186.5" y="197" width="2.1" height="15.0" fill="rgb(244,106,51)" rx="2" ry="2" />
<text  x="1189.52" y="207.5" ></text>
</g>
<g >
<title>memset (25 samples, 0.07%)</title><rect x="828.9" y="261" width="0.8" height="15.0" fill="rgb(219,207,27)" rx="2" ry="2" />
<text  x="831.93" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (4 samples, 0.01%)</title><rect x="807.4" y="277" width="0.1" height="15.0" fill="rgb(240,90,46)" rx="2" ry="2" />
<text  x="810.42" y="287.5" ></text>
</g>
<g >
<title>HUF_compress_internal (2,766 samples, 7.42%)</title><rect x="998.5" y="181" width="87.6" height="15.0" fill="rgb(240,152,19)" rx="2" ry="2" />
<text  x="1001.51" y="191.5" >HUF_compre..</text>
</g>
<g >
<title>BIT_skipBits (306 samples, 0.82%)</title><rect x="1155.4" y="213" width="9.6" height="15.0" fill="rgb(217,173,53)" rx="2" ry="2" />
<text  x="1158.36" y="223.5" ></text>
</g>
<g >
<title>?? (93 samples, 0.25%)</title><rect x="825.9" y="309" width="3.0" height="15.0" fill="rgb(221,26,0)" rx="2" ry="2" />
<text  x="828.92" y="319.5" ></text>
</g>
<g >
<title>zdepth::ZstdCompress (13 samples, 0.03%)</title><rect x="1095.8" y="373" width="0.4" height="15.0" fill="rgb(239,11,32)" rx="2" ry="2" />
<text  x="1098.79" y="383.5" ></text>
</g>
<g >
<title>?? (93 samples, 0.25%)</title><rect x="825.9" y="325" width="3.0" height="15.0" fill="rgb(243,151,50)" rx="2" ry="2" />
<text  x="828.92" y="335.5" ></text>
</g>
<g >
<title>?? (11 samples, 0.03%)</title><rect x="1095.9" y="277" width="0.3" height="15.0" fill="rgb(223,42,17)" rx="2" ry="2" />
<text  x="1098.85" y="287.5" ></text>
</g>
<g >
<title>HUF_compress4X_usingCTable_internal (1,569 samples, 4.21%)</title><rect x="1035.0" y="149" width="49.7" height="15.0" fill="rgb(243,167,41)" rx="2" ry="2" />
<text  x="1037.99" y="159.5" >HUF_c..</text>
</g>
<g >
<title>DecodeVLE (7,298 samples, 19.59%)</title><rect x="576.5" y="373" width="231.1" height="15.0" fill="rgb(219,65,43)" rx="2" ry="2" />
<text  x="579.50" y="383.5" >DecodeVLE</text>
</g>
<g >
<title>MEM_read64 (308 samples, 0.83%)</title><rect x="1122.5" y="181" width="9.8" height="15.0" fill="rgb(237,45,44)" rx="2" ry="2" />
<text  x="1125.55" y="191.5" ></text>
</g>
<g >
<title>RVL_compress (93 samples, 0.25%)</title><rect x="825.9" y="389" width="3.0" height="15.0" fill="rgb(217,148,23)" rx="2" ry="2" />
<text  x="828.92" y="399.5" ></text>
</g>
<g >
<title>ZSTD_copy8 (41 samples, 0.11%)</title><rect x="991.1" y="165" width="1.3" height="15.0" fill="rgb(214,87,11)" rx="2" ry="2" />
<text  x="994.06" y="175.5" ></text>
</g>
<g >
<title>FSE_decodeSymbolFast (7 samples, 0.02%)</title><rect x="1168.9" y="149" width="0.2" height="15.0" fill="rgb(252,132,20)" rx="2" ry="2" />
<text  x="1171.91" y="159.5" ></text>
</g>
<g >
<title>HIST_countFast_wksp (70 samples, 0.19%)</title><rect x="993.4" y="213" width="2.2" height="15.0" fill="rgb(226,25,0)" rx="2" ry="2" />
<text  x="996.41" y="223.5" ></text>
</g>
<g >
<title>HUF_readStats (54 samples, 0.14%)</title><rect x="1167.9" y="213" width="1.7" height="15.0" fill="rgb(249,204,37)" rx="2" ry="2" />
<text  x="1170.86" y="223.5" ></text>
</g>
<g >
<title>zdepth::ZstdCompress (8,442 samples, 22.66%)</title><rect x="828.9" y="389" width="267.3" height="15.0" fill="rgb(228,70,11)" rx="2" ry="2" />
<text  x="831.86" y="399.5" >zdepth::ZstdCompress</text>
</g>
<g >
<title>[unknown] (36 samples, 0.10%)</title><rect x="10.5" y="469" width="1.1" height="15.0" fill="rgb(234,222,36)" rx="2" ry="2" />
<text  x="13.48" y="479.5" ></text>
</g>
<g >
<title>ZSTD_compressBegin_internal (29 samples, 0.08%)</title><rect x="828.9" y="309" width="0.9" height="15.0" fill="rgb(221,76,50)" rx="2" ry="2" />
<text  x="831.86" y="319.5" ></text>
</g>
<g >
<title>ZSTD_hash6Ptr (668 samples, 1.79%)</title><rect x="962.9" y="181" width="21.2" height="15.0" fill="rgb(216,0,32)" rx="2" ry="2" />
<text  x="965.94" y="191.5" ></text>
</g>
<g >
<title>FSE_decompress_wksp (37 samples, 0.10%)</title><rect x="1168.3" y="197" width="1.2" height="15.0" fill="rgb(208,172,21)" rx="2" ry="2" />
<text  x="1171.34" y="207.5" ></text>
</g>
<g >
<title>ZSTD_decompressMultiFrame (2,943 samples, 7.90%)</title><rect x="1096.5" y="325" width="93.2" height="15.0" fill="rgb(210,69,42)" rx="2" ry="2" />
<text  x="1099.49" y="335.5" >ZSTD_decomp..</text>
</g>
<g >
<title>memcpy (5 samples, 0.01%)</title><rect x="1183.4" y="197" width="0.2" height="15.0" fill="rgb(238,197,39)" rx="2" ry="2" />
<text  x="1186.41" y="207.5" ></text>
</g>
<g >
<title>ZSTD_reset_matchState (25 samples, 0.07%)</title><rect x="828.9" y="277" width="0.8" height="15.0" fill="rgb(247,97,45)" rx="2" ry="2" />
<text  x="831.93" y="287.5" ></text>
</g>
<g >
<title>ZSTD_compressContinue_internal (8,381 samples, 22.49%)</title><rect x="829.8" y="293" width="265.4" height="15.0" fill="rgb(253,168,26)" rx="2" ry="2" />
<text  x="832.78" y="303.5" >ZSTD_compressContinue_internal</text>
</g>
<g >
<title>__x64_sys_execve (6 samples, 0.02%)</title><rect x="10.0" y="437" width="0.2" height="15.0" fill="rgb(221,83,27)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>memcpy (66 samples, 0.18%)</title><rect x="1186.5" y="181" width="2.1" height="15.0" fill="rgb(206,101,2)" rx="2" ry="2" />
<text  x="1189.52" y="191.5" ></text>
</g>
<g >
<title>ZSTD_storeSeq (263 samples, 0.71%)</title><rect x="984.1" y="197" width="8.3" height="15.0" fill="rgb(245,170,15)" rx="2" ry="2" />
<text  x="987.10" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (11 samples, 0.03%)</title><rect x="1095.9" y="261" width="0.3" height="15.0" fill="rgb(228,154,40)" rx="2" ry="2" />
<text  x="1098.85" y="271.5" ></text>
</g>
<g >
<title>BIT_addBitsFast (473 samples, 1.27%)</title><rect x="1069.7" y="69" width="15.0" height="15.0" fill="rgb(229,143,33)" rx="2" ry="2" />
<text  x="1072.69" y="79.5" ></text>
</g>
<g >
<title>HIST_count_wksp (836 samples, 2.24%)</title><rect x="998.5" y="165" width="26.5" height="15.0" fill="rgb(206,161,35)" rx="2" ry="2" />
<text  x="1001.54" y="175.5" >H..</text>
</g>
<g >
<title>__memset_avx2_erms (25 samples, 0.07%)</title><rect x="828.9" y="245" width="0.8" height="15.0" fill="rgb(231,57,10)" rx="2" ry="2" />
<text  x="831.93" y="255.5" ></text>
</g>
<g >
<title>intel_tfa_pmu_enable_all (6 samples, 0.02%)</title><rect x="10.0" y="309" width="0.2" height="15.0" fill="rgb(227,125,13)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>scheduler_tick (4 samples, 0.01%)</title><rect x="807.4" y="245" width="0.1" height="15.0" fill="rgb(234,224,38)" rx="2" ry="2" />
<text  x="810.42" y="255.5" ></text>
</g>
<g >
<title>?? (11 samples, 0.03%)</title><rect x="1095.9" y="293" width="0.3" height="15.0" fill="rgb(205,25,28)" rx="2" ry="2" />
<text  x="1098.85" y="303.5" ></text>
</g>
<g >
<title>memcpy (41 samples, 0.11%)</title><rect x="991.1" y="149" width="1.3" height="15.0" fill="rgb(216,21,44)" rx="2" ry="2" />
<text  x="994.06" y="159.5" ></text>
</g>
<g >
<title>FSE_buildDTable (9 samples, 0.02%)</title><rect x="1168.3" y="181" width="0.3" height="15.0" fill="rgb(242,120,22)" rx="2" ry="2" />
<text  x="1171.34" y="191.5" ></text>
</g>
<g >
<title>ZSTD_buildSeqStore (5,162 samples, 13.85%)</title><rect x="829.9" y="245" width="163.4" height="15.0" fill="rgb(242,112,24)" rx="2" ry="2" />
<text  x="832.88" y="255.5" >ZSTD_buildSeqStore</text>
</g>
<g >
<title>FSE_buildCTable_wksp (6 samples, 0.02%)</title><rect x="1084.9" y="133" width="0.2" height="15.0" fill="rgb(234,31,25)" rx="2" ry="2" />
<text  x="1087.90" y="143.5" ></text>
</g>
<g >
<title>HUF_encodeSymbol (1,064 samples, 2.86%)</title><rect x="1051.0" y="85" width="33.7" height="15.0" fill="rgb(243,28,49)" rx="2" ry="2" />
<text  x="1053.98" y="95.5" >HU..</text>
</g>
<g >
<title>zdepth::ZstdDecompress (2,956 samples, 7.93%)</title><rect x="1096.2" y="389" width="93.6" height="15.0" fill="rgb(243,128,27)" rx="2" ry="2" />
<text  x="1099.20" y="399.5" >zdepth::Zst..</text>
</g>
<g >
<title>BIT_skipBits (6 samples, 0.02%)</title><rect x="1180.7" y="181" width="0.2" height="15.0" fill="rgb(244,172,48)" rx="2" ry="2" />
<text  x="1183.72" y="191.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (4 samples, 0.01%)</title><rect x="427.5" y="357" width="0.2" height="15.0" fill="rgb(221,166,34)" rx="2" ry="2" />
<text  x="430.54" y="367.5" ></text>
</g>
<g >
<title>memset (8 samples, 0.02%)</title><rect x="995.4" y="181" width="0.2" height="15.0" fill="rgb(207,38,26)" rx="2" ry="2" />
<text  x="998.37" y="191.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (8 samples, 0.02%)</title><rect x="807.3" y="357" width="0.3" height="15.0" fill="rgb(209,160,6)" rx="2" ry="2" />
<text  x="810.33" y="367.5" ></text>
</g>
<g >
<title>main (37,188 samples, 99.80%)</title><rect x="12.2" y="437" width="1177.6" height="15.0" fill="rgb(230,220,15)" rx="2" ry="2" />
<text  x="15.15" y="447.5" >main</text>
</g>
<g >
<title>BIT_getMiddleBits (16 samples, 0.04%)</title><rect x="1180.2" y="165" width="0.5" height="15.0" fill="rgb(240,113,32)" rx="2" ry="2" />
<text  x="1183.21" y="175.5" ></text>
</g>
<g >
<title>BIT_readBitsFast (5 samples, 0.01%)</title><rect x="1169.0" y="133" width="0.1" height="15.0" fill="rgb(249,34,35)" rx="2" ry="2" />
<text  x="1171.97" y="143.5" ></text>
</g>
<g >
<title>BIT_flushBits (467 samples, 1.25%)</title><rect x="1036.2" y="85" width="14.8" height="15.0" fill="rgb(241,161,44)" rx="2" ry="2" />
<text  x="1039.19" y="95.5" ></text>
</g>
<g >
<title>ZSTD_buildFSETable (62 samples, 0.17%)</title><rect x="1170.1" y="245" width="1.9" height="15.0" fill="rgb(230,86,51)" rx="2" ry="2" />
<text  x="1173.08" y="255.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (4 samples, 0.01%)</title><rect x="825.8" y="373" width="0.1" height="15.0" fill="rgb(234,51,21)" rx="2" ry="2" />
<text  x="828.79" y="383.5" ></text>
</g>
<g >
<title>DecompressRVL (12,569 samples, 33.73%)</title><rect x="427.8" y="389" width="398.0" height="15.0" fill="rgb(242,149,8)" rx="2" ry="2" />
<text  x="430.76" y="399.5" >DecompressRVL</text>
</g>
<g >
<title>BIT_reloadDStream (48 samples, 0.13%)</title><rect x="1172.2" y="229" width="1.6" height="15.0" fill="rgb(233,20,33)" rx="2" ry="2" />
<text  x="1175.23" y="239.5" ></text>
</g>
<g >
<title>ZSTD_cpuid (4 samples, 0.01%)</title><rect x="1096.3" y="309" width="0.1" height="15.0" fill="rgb(246,170,54)" rx="2" ry="2" />
<text  x="1099.26" y="319.5" ></text>
</g>
<g >
<title>__libc_start_main (37,190 samples, 99.81%)</title><rect x="12.1" y="453" width="1177.7" height="15.0" fill="rgb(250,106,32)" rx="2" ry="2" />
<text  x="15.09" y="463.5" >__libc_start_main</text>
</g>
<g >
<title>ZSTD_compress (8,428 samples, 22.62%)</title><rect x="828.9" y="373" width="266.9" height="15.0" fill="rgb(229,163,42)" rx="2" ry="2" />
<text  x="831.86" y="383.5" >ZSTD_compress</text>
</g>
<g >
<title>ZSTD_encodeSequences_body (194 samples, 0.52%)</title><rect x="1086.2" y="197" width="6.1" height="15.0" fill="rgb(241,138,54)" rx="2" ry="2" />
<text  x="1089.16" y="207.5" ></text>
</g>
<g >
<title>GetTimeUsec (4 samples, 0.01%)</title><rect x="825.8" y="389" width="0.1" height="15.0" fill="rgb(244,71,4)" rx="2" ry="2" />
<text  x="828.79" y="399.5" ></text>
</g>
<g >
<title>BIT_lookBitsFast (33 samples, 0.09%)</title><rect x="1176.6" y="197" width="1.0" height="15.0" fill="rgb(212,129,51)" rx="2" ry="2" />
<text  x="1179.60" y="207.5" ></text>
</g>
<g >
<title>perf_event_exec (6 samples, 0.02%)</title><rect x="10.0" y="357" width="0.2" height="15.0" fill="rgb(223,35,12)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>HUF_sort (202 samples, 0.54%)</title><rect x="1028.5" y="149" width="6.4" height="15.0" fill="rgb(230,37,32)" rx="2" ry="2" />
<text  x="1031.53" y="159.5" ></text>
</g>
<g >
<title>ZSTD_cpuid (7 samples, 0.02%)</title><rect x="1095.5" y="341" width="0.2" height="15.0" fill="rgb(233,92,45)" rx="2" ry="2" />
<text  x="1098.50" y="351.5" ></text>
</g>
<g >
<title>ZSTD_execSequence (258 samples, 0.69%)</title><rect x="1180.9" y="229" width="8.2" height="15.0" fill="rgb(207,122,37)" rx="2" ry="2" />
<text  x="1183.91" y="239.5" ></text>
</g>
<g >
<title>ZSTD_compressEnd (8,381 samples, 22.49%)</title><rect x="829.8" y="309" width="265.4" height="15.0" fill="rgb(243,105,39)" rx="2" ry="2" />
<text  x="832.78" y="319.5" >ZSTD_compressEnd</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.02%)</title><rect x="10.0" y="469" width="0.2" height="15.0" fill="rgb(241,177,19)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>tick_sched_timer (6 samples, 0.02%)</title><rect x="807.4" y="293" width="0.1" height="15.0" fill="rgb(243,193,49)" rx="2" ry="2" />
<text  x="810.36" y="303.5" ></text>
</g>
<g >
<title>BIT_lookBitsFast (5 samples, 0.01%)</title><rect x="1169.0" y="117" width="0.1" height="15.0" fill="rgb(221,83,5)" rx="2" ry="2" />
<text  x="1171.97" y="127.5" ></text>
</g>
<g >
<title>BIT_lookBits (31 samples, 0.08%)</title><rect x="1179.7" y="181" width="1.0" height="15.0" fill="rgb(214,23,43)" rx="2" ry="2" />
<text  x="1182.74" y="191.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 0.02%)</title><rect x="10.0" y="277" width="0.2" height="15.0" fill="rgb(210,97,26)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>HUF_decompress4X_hufOnly_wksp_bmi2 (144 samples, 0.39%)</title><rect x="1165.0" y="261" width="4.6" height="15.0" fill="rgb(246,125,48)" rx="2" ry="2" />
<text  x="1168.05" y="271.5" ></text>
</g>
<g >
<title>ZSTD_copy16 (56 samples, 0.15%)</title><rect x="989.3" y="165" width="1.8" height="15.0" fill="rgb(239,71,41)" rx="2" ry="2" />
<text  x="992.29" y="175.5" ></text>
</g>
<g >
<title>MEM_writeLEST (79 samples, 0.21%)</title><rect x="1048.4" y="69" width="2.5" height="15.0" fill="rgb(250,47,17)" rx="2" ry="2" />
<text  x="1051.45" y="79.5" ></text>
</g>
<g >
<title>ZSTD_highbit32 (21 samples, 0.06%)</title><rect x="1094.5" y="197" width="0.7" height="15.0" fill="rgb(224,171,2)" rx="2" ry="2" />
<text  x="1097.49" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (20 samples, 0.05%)</title><rect x="992.6" y="197" width="0.7" height="15.0" fill="rgb(215,170,16)" rx="2" ry="2" />
<text  x="995.65" y="207.5" ></text>
</g>
<g >
<title>ZSTD_storeLastLiterals (23 samples, 0.06%)</title><rect x="992.6" y="229" width="0.7" height="15.0" fill="rgb(253,27,4)" rx="2" ry="2" />
<text  x="995.62" y="239.5" ></text>
</g>
<g >
<title>BIT_flushBits (11 samples, 0.03%)</title><rect x="1088.9" y="181" width="0.3" height="15.0" fill="rgb(212,4,21)" rx="2" ry="2" />
<text  x="1091.89" y="191.5" ></text>
</g>
<g >
<title>memcpy (37 samples, 0.10%)</title><rect x="1183.6" y="197" width="1.1" height="15.0" fill="rgb(241,228,30)" rx="2" ry="2" />
<text  x="1186.57" y="207.5" ></text>
</g>
<g >
<title>ZSTD_hash6 (668 samples, 1.79%)</title><rect x="962.9" y="165" width="21.2" height="15.0" fill="rgb(225,59,37)" rx="2" ry="2" />
<text  x="965.94" y="175.5" ></text>
</g>
<g >
<title>?? (93 samples, 0.25%)</title><rect x="825.9" y="341" width="3.0" height="15.0" fill="rgb(210,45,35)" rx="2" ry="2" />
<text  x="828.92" y="351.5" ></text>
</g>
<g >
<title>ZSTD_decodeSeqHeaders (77 samples, 0.21%)</title><rect x="1169.6" y="277" width="2.4" height="15.0" fill="rgb(217,189,36)" rx="2" ry="2" />
<text  x="1172.61" y="287.5" ></text>
</g>
<g >
<title>ZSTD_encodeSequences_bmi2 (194 samples, 0.52%)</title><rect x="1086.2" y="213" width="6.1" height="15.0" fill="rgb(243,33,38)" rx="2" ry="2" />
<text  x="1089.16" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8 samples, 0.02%)</title><rect x="807.3" y="325" width="0.3" height="15.0" fill="rgb(233,67,25)" rx="2" ry="2" />
<text  x="810.33" y="335.5" ></text>
</g>
<g >
<title>ZSTD_compressLiterals (2,769 samples, 7.43%)</title><rect x="998.4" y="213" width="87.7" height="15.0" fill="rgb(229,28,41)" rx="2" ry="2" />
<text  x="1001.44" y="223.5" >ZSTD_compr..</text>
</g>
<g >
<title>HIST_count_parallel_wksp (836 samples, 2.24%)</title><rect x="998.5" y="117" width="26.5" height="15.0" fill="rgb(235,32,32)" rx="2" ry="2" />
<text  x="1001.54" y="127.5" >H..</text>
</g>
<g >
<title>HUF_compress1X_usingCTable_internal_bmi2 (1,569 samples, 4.21%)</title><rect x="1035.0" y="117" width="49.7" height="15.0" fill="rgb(234,45,5)" rx="2" ry="2" />
<text  x="1037.99" y="127.5" >HUF_c..</text>
</g>
<g >
<title>HUF_compress1X_usingCTable_internal (1,569 samples, 4.21%)</title><rect x="1035.0" y="133" width="49.7" height="15.0" fill="rgb(227,189,50)" rx="2" ry="2" />
<text  x="1037.99" y="143.5" >HUF_c..</text>
</g>
<g >
<title>BIT_addBits (41 samples, 0.11%)</title><rect x="1090.9" y="165" width="1.3" height="15.0" fill="rgb(227,65,30)" rx="2" ry="2" />
<text  x="1093.94" y="175.5" ></text>
</g>
<g >
<title>ZSTD_wildcopy (168 samples, 0.45%)</title><rect x="987.1" y="181" width="5.3" height="15.0" fill="rgb(224,135,19)" rx="2" ry="2" />
<text  x="990.07" y="191.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (549 samples, 1.47%)</title><rect x="807.6" y="373" width="17.4" height="15.0" fill="rgb(206,80,18)" rx="2" ry="2" />
<text  x="810.61" y="383.5" ></text>
</g>
<g >
<title>memcpy (23 samples, 0.06%)</title><rect x="1185.0" y="181" width="0.7" height="15.0" fill="rgb(243,180,7)" rx="2" ry="2" />
<text  x="1187.96" y="191.5" ></text>
</g>
<g >
<title>ZSTD_resetCCtx_internal (28 samples, 0.08%)</title><rect x="828.9" y="293" width="0.9" height="15.0" fill="rgb(233,37,24)" rx="2" ry="2" />
<text  x="831.89" y="303.5" ></text>
</g>
<g >
<title>ZSTD_decompress (2,956 samples, 7.93%)</title><rect x="1096.2" y="373" width="93.6" height="15.0" fill="rgb(236,217,10)" rx="2" ry="2" />
<text  x="1099.20" y="383.5" >ZSTD_decomp..</text>
</g>
<g >
<title>ZSTD_decompress_usingDDict (2,943 samples, 7.90%)</title><rect x="1096.5" y="341" width="93.2" height="15.0" fill="rgb(236,58,53)" rx="2" ry="2" />
<text  x="1099.49" y="351.5" >ZSTD_decomp..</text>
</g>
<g >
<title>HUF_writeCTable (44 samples, 0.12%)</title><rect x="1084.7" y="165" width="1.4" height="15.0" fill="rgb(211,226,17)" rx="2" ry="2" />
<text  x="1087.67" y="175.5" ></text>
</g>
<g >
<title>?? (11 samples, 0.03%)</title><rect x="1095.9" y="341" width="0.3" height="15.0" fill="rgb(253,204,12)" rx="2" ry="2" />
<text  x="1098.85" y="351.5" ></text>
</g>
<g >
<title>EncodeVLE (7,746 samples, 20.79%)</title><rect x="182.2" y="373" width="245.3" height="15.0" fill="rgb(213,101,14)" rx="2" ry="2" />
<text  x="185.24" y="383.5" >EncodeVLE</text>
</g>
<g >
<title>search_binary_handler (6 samples, 0.02%)</title><rect x="10.0" y="405" width="0.2" height="15.0" fill="rgb(209,184,29)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (8 samples, 0.02%)</title><rect x="807.3" y="341" width="0.3" height="15.0" fill="rgb(246,24,39)" rx="2" ry="2" />
<text  x="810.33" y="351.5" ></text>
</g>
<g >
<title>BIT_addBits (8 samples, 0.02%)</title><rect x="1085.4" y="101" width="0.2" height="15.0" fill="rgb(232,165,27)" rx="2" ry="2" />
<text  x="1088.37" y="111.5" ></text>
</g>
<g >
<title>FSE_writeNCount_generic (4 samples, 0.01%)</title><rect x="1085.8" y="117" width="0.1" height="15.0" fill="rgb(207,218,0)" rx="2" ry="2" />
<text  x="1088.75" y="127.5" ></text>
</g>
<g >
<title>ZSTD_wildcopy (30 samples, 0.08%)</title><rect x="1184.7" y="213" width="1.0" height="15.0" fill="rgb(251,206,25)" rx="2" ry="2" />
<text  x="1187.74" y="223.5" ></text>
</g>
<g >
<title>CompressRVL (13,121 samples, 35.21%)</title><rect x="12.2" y="389" width="415.6" height="15.0" fill="rgb(227,213,12)" rx="2" ry="2" />
<text  x="15.25" y="399.5" >CompressRVL</text>
</g>
<g >
<title>FSE_buildCTable_wksp (50 samples, 0.13%)</title><rect x="995.7" y="197" width="1.5" height="15.0" fill="rgb(231,81,27)" rx="2" ry="2" />
<text  x="998.66" y="207.5" ></text>
</g>
<g >
<title>memset (6 samples, 0.02%)</title><rect x="1169.3" y="165" width="0.2" height="15.0" fill="rgb(244,124,33)" rx="2" ry="2" />
<text  x="1172.32" y="175.5" ></text>
</g>
<g >
<title>?? (93 samples, 0.25%)</title><rect x="825.9" y="293" width="3.0" height="15.0" fill="rgb(225,214,13)" rx="2" ry="2" />
<text  x="828.92" y="303.5" ></text>
</g>
<g >
<title>HUF_decompress4X1_DCtx_wksp_bmi2 (143 samples, 0.38%)</title><rect x="1165.0" y="245" width="4.6" height="15.0" fill="rgb(236,111,49)" rx="2" ry="2" />
<text  x="1168.05" y="255.5" ></text>
</g>
<g >
<title>FSE_decompress_usingDTable (19 samples, 0.05%)</title><rect x="1168.6" y="181" width="0.6" height="15.0" fill="rgb(246,48,10)" rx="2" ry="2" />
<text  x="1171.62" y="191.5" ></text>
</g>
<g >
<title>ZSTD_buildSeqTable (77 samples, 0.21%)</title><rect x="1169.6" y="261" width="2.4" height="15.0" fill="rgb(208,97,25)" rx="2" ry="2" />
<text  x="1172.61" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.02%)</title><rect x="10.0" y="453" width="0.2" height="15.0" fill="rgb(211,71,0)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>ZSTD_seqToCodes (90 samples, 0.24%)</title><rect x="1092.3" y="213" width="2.9" height="15.0" fill="rgb(208,128,2)" rx="2" ry="2" />
<text  x="1095.31" y="223.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (4 samples, 0.01%)</title><rect x="427.3" y="341" width="0.2" height="15.0" fill="rgb(223,62,7)" rx="2" ry="2" />
<text  x="430.35" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4 samples, 0.01%)</title><rect x="427.5" y="341" width="0.2" height="15.0" fill="rgb(213,81,31)" rx="2" ry="2" />
<text  x="430.54" y="351.5" ></text>
</g>
<g >
<title>memset@plt (19 samples, 0.05%)</title><rect x="825.1" y="373" width="0.6" height="15.0" fill="rgb(235,115,35)" rx="2" ry="2" />
<text  x="828.09" y="383.5" ></text>
</g>
<g >
<title>ZSTD_decompressBlock_internal (2,941 samples, 7.89%)</title><rect x="1096.5" y="293" width="93.2" height="15.0" fill="rgb(225,44,3)" rx="2" ry="2" />
<text  x="1099.55" y="303.5" >ZSTD_decomp..</text>
</g>
<g >
<title>HUF_setMaxHeight (15 samples, 0.04%)</title><rect x="1028.1" y="149" width="0.4" height="15.0" fill="rgb(245,119,17)" rx="2" ry="2" />
<text  x="1031.05" y="159.5" ></text>
</g>
<g >
<title>ZSTD_compressSequences_internal (3,215 samples, 8.63%)</title><rect x="993.3" y="229" width="101.9" height="15.0" fill="rgb(232,32,7)" rx="2" ry="2" />
<text  x="996.34" y="239.5" >ZSTD_compres..</text>
</g>
<g >
<title>ZSTD_compressBlock_fast (5,139 samples, 13.79%)</title><rect x="829.9" y="229" width="162.7" height="15.0" fill="rgb(222,220,36)" rx="2" ry="2" />
<text  x="832.88" y="239.5" >ZSTD_compressBlock_f..</text>
</g>
<g >
<title>BIT_readBits (37 samples, 0.10%)</title><rect x="1179.7" y="197" width="1.2" height="15.0" fill="rgb(222,174,15)" rx="2" ry="2" />
<text  x="1182.74" y="207.5" ></text>
</g>
<g >
<title>FSE_encodeSymbol (95 samples, 0.25%)</title><rect x="1089.2" y="181" width="3.0" height="15.0" fill="rgb(249,103,50)" rx="2" ry="2" />
<text  x="1092.23" y="191.5" ></text>
</g>
<g >
<title>ZSTD_highbit32 (17 samples, 0.05%)</title><rect x="1094.0" y="181" width="0.5" height="15.0" fill="rgb(248,216,46)" rx="2" ry="2" />
<text  x="1096.95" y="191.5" ></text>
</g>
<g >
<title>BIT_reloadDStream (760 samples, 2.04%)</title><rect x="1108.2" y="229" width="24.1" height="15.0" fill="rgb(253,135,6)" rx="2" ry="2" />
<text  x="1111.23" y="239.5" >B..</text>
</g>
<g >
<title>setup_new_exec (6 samples, 0.02%)</title><rect x="10.0" y="373" width="0.2" height="15.0" fill="rgb(220,154,47)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>FSE_writeNCount (5 samples, 0.01%)</title><rect x="1085.7" y="133" width="0.2" height="15.0" fill="rgb(248,177,49)" rx="2" ry="2" />
<text  x="1088.72" y="143.5" ></text>
</g>
<g >
<title>RVL_compress (37,187 samples, 99.80%)</title><rect x="12.2" y="405" width="1177.6" height="15.0" fill="rgb(210,85,54)" rx="2" ry="2" />
<text  x="15.19" y="415.5" >RVL_compress</text>
</g>
<g >
<title>HUF_decompress4X1_usingDTable_internal_body (2,159 samples, 5.79%)</title><rect x="1096.7" y="245" width="68.3" height="15.0" fill="rgb(240,225,1)" rx="2" ry="2" />
<text  x="1099.68" y="255.5" >HUF_dec..</text>
</g>
<g >
<title>__memset_avx2_erms (93 samples, 0.25%)</title><rect x="825.9" y="261" width="3.0" height="15.0" fill="rgb(222,216,20)" rx="2" ry="2" />
<text  x="828.92" y="271.5" ></text>
</g>
<g >
<title>ZSTD_copy4 (5 samples, 0.01%)</title><rect x="1183.4" y="213" width="0.2" height="15.0" fill="rgb(230,100,51)" rx="2" ry="2" />
<text  x="1186.41" y="223.5" ></text>
</g>
<g >
<title>ZSTD_decodeSequence (226 samples, 0.61%)</title><rect x="1173.8" y="229" width="7.1" height="15.0" fill="rgb(251,187,39)" rx="2" ry="2" />
<text  x="1176.75" y="239.5" ></text>
</g>
<g >
<title>ZSTD_compress_frameChunk (8,377 samples, 22.48%)</title><rect x="829.9" y="277" width="265.3" height="15.0" fill="rgb(246,163,32)" rx="2" ry="2" />
<text  x="832.88" y="287.5" >ZSTD_compress_frameChunk</text>
</g>
<g >
<title>apic_timer_interrupt (4 samples, 0.01%)</title><rect x="427.3" y="357" width="0.2" height="15.0" fill="rgb(243,75,54)" rx="2" ry="2" />
<text  x="430.35" y="367.5" ></text>
</g>
<g >
<title>FSE_compress_usingCTable_generic (17 samples, 0.05%)</title><rect x="1085.1" y="133" width="0.6" height="15.0" fill="rgb(225,200,12)" rx="2" ry="2" />
<text  x="1088.12" y="143.5" ></text>
</g>
<g >
<title>BIT_lookBitsFast (233 samples, 0.63%)</title><rect x="1148.0" y="213" width="7.4" height="15.0" fill="rgb(206,74,27)" rx="2" ry="2" />
<text  x="1150.98" y="223.5" ></text>
</g>
<g >
<title>ZSTD_count (102 samples, 0.27%)</title><rect x="959.7" y="197" width="3.2" height="15.0" fill="rgb(223,54,3)" rx="2" ry="2" />
<text  x="962.71" y="207.5" ></text>
</g>
<g >
<title>ZSTD_compress_usingDict (8,413 samples, 22.58%)</title><rect x="828.9" y="341" width="266.4" height="15.0" fill="rgb(207,105,19)" rx="2" ry="2" />
<text  x="831.86" y="351.5" >ZSTD_compress_usingDict</text>
</g>
<g >
<title>ZSTD_decompressSequences (557 samples, 1.49%)</title><rect x="1172.0" y="277" width="17.7" height="15.0" fill="rgb(244,87,19)" rx="2" ry="2" />
<text  x="1175.04" y="287.5" ></text>
</g>
<g >
<title>?? (11 samples, 0.03%)</title><rect x="1095.9" y="309" width="0.3" height="15.0" fill="rgb(223,177,23)" rx="2" ry="2" />
<text  x="1098.85" y="319.5" ></text>
</g>
<g >
<title>ZSTD_decompressFrame (2,943 samples, 7.90%)</title><rect x="1096.5" y="309" width="93.2" height="15.0" fill="rgb(227,83,21)" rx="2" ry="2" />
<text  x="1099.49" y="319.5" >ZSTD_decomp..</text>
</g>
<g >
<title>ZSTD_decompressSequences_body (556 samples, 1.49%)</title><rect x="1172.1" y="245" width="17.6" height="15.0" fill="rgb(254,74,27)" rx="2" ry="2" />
<text  x="1175.08" y="255.5" ></text>
</g>
<g >
<title>ZSTD_wildcopy_16min (106 samples, 0.28%)</title><rect x="1185.7" y="213" width="3.3" height="15.0" fill="rgb(217,16,21)" rx="2" ry="2" />
<text  x="1188.69" y="223.5" ></text>
</g>
<g >
<title>ZSTD_updateFseState (81 samples, 0.22%)</title><rect x="1178.3" y="213" width="2.6" height="15.0" fill="rgb(244,17,40)" rx="2" ry="2" />
<text  x="1181.35" y="223.5" ></text>
</g>
<g >
<title>HIST_count_simple (70 samples, 0.19%)</title><rect x="993.4" y="197" width="2.2" height="15.0" fill="rgb(250,190,16)" rx="2" ry="2" />
<text  x="996.41" y="207.5" ></text>
</g>
<g >
<title>HUF_decodeSymbolX1 (1,031 samples, 2.77%)</title><rect x="1132.4" y="229" width="32.6" height="15.0" fill="rgb(243,52,54)" rx="2" ry="2" />
<text  x="1135.40" y="239.5" >HU..</text>
</g>
<g >
<title>FSE_decompress_usingDTable_generic (19 samples, 0.05%)</title><rect x="1168.6" y="165" width="0.6" height="15.0" fill="rgb(240,143,54)" rx="2" ry="2" />
<text  x="1171.62" y="175.5" ></text>
</g>
<g >
<title>perf (6 samples, 0.02%)</title><rect x="10.0" y="485" width="0.2" height="15.0" fill="rgb(229,107,16)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>free@plt (4 samples, 0.01%)</title><rect x="1095.4" y="341" width="0.1" height="15.0" fill="rgb(219,11,47)" rx="2" ry="2" />
<text  x="1098.38" y="351.5" ></text>
</g>
<g >
<title>ZSTD_copy8 (37 samples, 0.10%)</title><rect x="1183.6" y="213" width="1.1" height="15.0" fill="rgb(247,101,37)" rx="2" ry="2" />
<text  x="1186.57" y="223.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (4 samples, 0.01%)</title><rect x="992.4" y="181" width="0.2" height="15.0" fill="rgb(245,72,9)" rx="2" ry="2" />
<text  x="995.43" y="191.5" ></text>
</g>
<g >
<title>__memset_avx2_erms (10 samples, 0.03%)</title><rect x="1095.9" y="245" width="0.3" height="15.0" fill="rgb(205,182,36)" rx="2" ry="2" />
<text  x="1098.85" y="255.5" ></text>
</g>
<g >
<title>MEM_read32 (242 samples, 0.65%)</title><rect x="952.0" y="197" width="7.7" height="15.0" fill="rgb(235,150,7)" rx="2" ry="2" />
<text  x="955.05" y="207.5" ></text>
</g>
<g >
<title>ZSTD_NbCommonBytes (21 samples, 0.06%)</title><rect x="962.3" y="181" width="0.6" height="15.0" fill="rgb(216,108,0)" rx="2" ry="2" />
<text  x="965.28" y="191.5" ></text>
</g>
<g >
<title>FSE_writeNCount_generic (13 samples, 0.03%)</title><rect x="998.0" y="181" width="0.4" height="15.0" fill="rgb(243,54,17)" rx="2" ry="2" />
<text  x="1001.03" y="191.5" ></text>
</g>
<g >
<title>HIST_countFast_wksp (836 samples, 2.24%)</title><rect x="998.5" y="149" width="26.5" height="15.0" fill="rgb(215,74,53)" rx="2" ry="2" />
<text  x="1001.54" y="159.5" >H..</text>
</g>
<g >
<title>ZSTD_decodeLiteralsBlock (2,303 samples, 6.18%)</title><rect x="1096.7" y="277" width="72.9" height="15.0" fill="rgb(208,11,39)" rx="2" ry="2" />
<text  x="1099.68" y="287.5" >ZSTD_dec..</text>
</g>
<g >
<title>?? (93 samples, 0.25%)</title><rect x="825.9" y="357" width="3.0" height="15.0" fill="rgb(217,115,6)" rx="2" ry="2" />
<text  x="828.92" y="367.5" ></text>
</g>
<g >
<title>HUF_readDTableX1_wksp (143 samples, 0.38%)</title><rect x="1165.0" y="229" width="4.6" height="15.0" fill="rgb(213,167,20)" rx="2" ry="2" />
<text  x="1168.05" y="239.5" ></text>
</g>
<g >
<title>ZSTD_freeCCtxContent (7 samples, 0.02%)</title><rect x="1095.3" y="357" width="0.2" height="15.0" fill="rgb(215,103,40)" rx="2" ry="2" />
<text  x="1098.28" y="367.5" ></text>
</g>
<g >
<title>[[heap]] (5 samples, 0.01%)</title><rect x="10.2" y="469" width="0.2" height="15.0" fill="rgb(243,186,21)" rx="2" ry="2" />
<text  x="13.22" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (93 samples, 0.25%)</title><rect x="825.9" y="373" width="3.0" height="15.0" fill="rgb(249,76,20)" rx="2" ry="2" />
<text  x="828.92" y="383.5" ></text>
</g>
<g >
<title>FSE_normalizeCount (25 samples, 0.07%)</title><rect x="997.2" y="197" width="0.8" height="15.0" fill="rgb(217,47,11)" rx="2" ry="2" />
<text  x="1000.24" y="207.5" ></text>
</g>
<g >
<title>HUF_compressWeights (38 samples, 0.10%)</title><rect x="1084.9" y="149" width="1.2" height="15.0" fill="rgb(210,75,16)" rx="2" ry="2" />
<text  x="1087.86" y="159.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (14 samples, 0.04%)</title><rect x="11.6" y="453" width="0.5" height="15.0" fill="rgb(213,92,30)" rx="2" ry="2" />
<text  x="14.62" y="463.5" ></text>
</g>
<g >
<title>HUF_decompress4X1_usingDTable_internal_bmi2 (2,159 samples, 5.79%)</title><rect x="1096.7" y="261" width="68.3" height="15.0" fill="rgb(246,169,1)" rx="2" ry="2" />
<text  x="1099.68" y="271.5" >HUF_dec..</text>
</g>
<g >
<title>HUF_buildCTable_wksp (315 samples, 0.85%)</title><rect x="1025.0" y="165" width="10.0" height="15.0" fill="rgb(239,37,18)" rx="2" ry="2" />
<text  x="1028.01" y="175.5" ></text>
</g>
<g >
<title>BIT_readBitsFast (56 samples, 0.15%)</title><rect x="1176.6" y="213" width="1.7" height="15.0" fill="rgb(216,181,12)" rx="2" ry="2" />
<text  x="1179.57" y="223.5" ></text>
</g>
<g >
<title>ZSTD_decompressSequences_bmi2 (557 samples, 1.49%)</title><rect x="1172.0" y="261" width="17.7" height="15.0" fill="rgb(206,176,29)" rx="2" ry="2" />
<text  x="1175.04" y="271.5" ></text>
</g>
<g >
<title>HUF_compress4X_repeat (2,768 samples, 7.43%)</title><rect x="998.4" y="197" width="87.7" height="15.0" fill="rgb(224,209,16)" rx="2" ry="2" />
<text  x="1001.44" y="207.5" >HUF_compre..</text>
</g>
<g >
<title>MEM_write64 (79 samples, 0.21%)</title><rect x="1048.4" y="37" width="2.5" height="15.0" fill="rgb(249,188,34)" rx="2" ry="2" />
<text  x="1051.45" y="47.5" ></text>
</g>
<g >
<title>ctx_resched (6 samples, 0.02%)</title><rect x="10.0" y="341" width="0.2" height="15.0" fill="rgb(205,183,47)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>FSE_writeNCount (13 samples, 0.03%)</title><rect x="998.0" y="197" width="0.4" height="15.0" fill="rgb(227,49,26)" rx="2" ry="2" />
<text  x="1001.03" y="207.5" ></text>
</g>
<g >
<title>HIST_countFast_wksp (836 samples, 2.24%)</title><rect x="998.5" y="133" width="26.5" height="15.0" fill="rgb(251,226,47)" rx="2" ry="2" />
<text  x="1001.54" y="143.5" >H..</text>
</g>
<g >
<title>ZSTD_buildCTable (89 samples, 0.24%)</title><rect x="995.6" y="213" width="2.8" height="15.0" fill="rgb(247,29,25)" rx="2" ry="2" />
<text  x="998.62" y="223.5" ></text>
</g>
<g >
<title>ZSTD_copy8 (23 samples, 0.06%)</title><rect x="1185.0" y="197" width="0.7" height="15.0" fill="rgb(212,64,54)" rx="2" ry="2" />
<text  x="1187.96" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (19 samples, 0.05%)</title><rect x="1189.1" y="213" width="0.6" height="15.0" fill="rgb(216,205,26)" rx="2" ry="2" />
<text  x="1192.08" y="223.5" ></text>
</g>
<g >
<title>memcpy (56 samples, 0.15%)</title><rect x="989.3" y="149" width="1.8" height="15.0" fill="rgb(223,79,39)" rx="2" ry="2" />
<text  x="992.29" y="159.5" ></text>
</g>
<g >
<title>TestImage (37,188 samples, 99.80%)</title><rect x="12.2" y="421" width="1177.6" height="15.0" fill="rgb(239,47,16)" rx="2" ry="2" />
<text  x="15.15" y="431.5" >TestImage</text>
</g>
<g >
<title>__hrtimer_run_queues (7 samples, 0.02%)</title><rect x="807.3" y="309" width="0.2" height="15.0" fill="rgb(247,201,8)" rx="2" ry="2" />
<text  x="810.33" y="319.5" ></text>
</g>
<g >
<title>HUF_compress1X_usingCTable_internal_body (1,569 samples, 4.21%)</title><rect x="1035.0" y="101" width="49.7" height="15.0" fill="rgb(219,18,11)" rx="2" ry="2" />
<text  x="1037.99" y="111.5" >HUF_c..</text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 0.02%)</title><rect x="10.0" y="325" width="0.2" height="15.0" fill="rgb(226,205,43)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>load_elf_binary (6 samples, 0.02%)</title><rect x="10.0" y="389" width="0.2" height="15.0" fill="rgb(219,224,20)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>BIT_reloadDStream (7 samples, 0.02%)</title><rect x="1168.7" y="149" width="0.2" height="15.0" fill="rgb(250,45,13)" rx="2" ry="2" />
<text  x="1171.69" y="159.5" ></text>
</g>
<g >
<title>ZSTD_LLcode (24 samples, 0.06%)</title><rect x="1093.7" y="197" width="0.8" height="15.0" fill="rgb(207,141,28)" rx="2" ry="2" />
<text  x="1096.73" y="207.5" ></text>
</g>
<g >
<title>MEM_readST (13 samples, 0.03%)</title><rect x="961.9" y="181" width="0.4" height="15.0" fill="rgb(245,106,11)" rx="2" ry="2" />
<text  x="964.87" y="191.5" ></text>
</g>
<g >
<title>memcpy (19 samples, 0.05%)</title><rect x="1189.1" y="229" width="0.6" height="15.0" fill="rgb(213,175,49)" rx="2" ry="2" />
<text  x="1192.08" y="239.5" ></text>
</g>
<g >
<title>ZSTD_compressBlock_fast_generic (5,139 samples, 13.79%)</title><rect x="829.9" y="213" width="162.7" height="15.0" fill="rgb(232,167,8)" rx="2" ry="2" />
<text  x="832.88" y="223.5" >ZSTD_compressBlock_f..</text>
</g>
<g >
<title>DecompressRVL (29 samples, 0.08%)</title><rect x="10.5" y="453" width="0.9" height="15.0" fill="rgb(254,94,53)" rx="2" ry="2" />
<text  x="13.48" y="463.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.02%)</title><rect x="1169.3" y="149" width="0.2" height="15.0" fill="rgb(254,188,33)" rx="2" ry="2" />
<text  x="1172.32" y="159.5" ></text>
</g>
<g >
<title>MEM_writeLE64 (79 samples, 0.21%)</title><rect x="1048.4" y="53" width="2.5" height="15.0" fill="rgb(208,144,38)" rx="2" ry="2" />
<text  x="1051.45" y="63.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (4 samples, 0.01%)</title><rect x="427.5" y="373" width="0.2" height="15.0" fill="rgb(228,97,44)" rx="2" ry="2" />
<text  x="430.54" y="383.5" ></text>
</g>
<g >
<title>ZSTD_initCCtx (8 samples, 0.02%)</title><rect x="1095.5" y="357" width="0.3" height="15.0" fill="rgb(209,99,23)" rx="2" ry="2" />
<text  x="1098.50" y="367.5" ></text>
</g>
<g >
<title>FSE_readNCount (15 samples, 0.04%)</title><rect x="1169.6" y="245" width="0.5" height="15.0" fill="rgb(249,199,4)" rx="2" ry="2" />
<text  x="1172.61" y="255.5" ></text>
</g>
<g >
<title>ZSTD_initDCtx_internal (4 samples, 0.01%)</title><rect x="1096.3" y="325" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1099.26" y="335.5" ></text>
</g>
<g >
<title>ZSTD_decompressDCtx (2,943 samples, 7.90%)</title><rect x="1096.5" y="357" width="93.2" height="15.0" fill="rgb(253,167,47)" rx="2" ry="2" />
<text  x="1099.49" y="367.5" >ZSTD_decomp..</text>
</g>
<g >
<title>apic_timer_interrupt (4 samples, 0.01%)</title><rect x="992.4" y="197" width="0.2" height="15.0" fill="rgb(219,149,18)" rx="2" ry="2" />
<text  x="995.43" y="207.5" ></text>
</g>
<g >
<title>HIST_count_simple (6 samples, 0.02%)</title><rect x="1085.9" y="133" width="0.2" height="15.0" fill="rgb(221,147,15)" rx="2" ry="2" />
<text  x="1088.88" y="143.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4 samples, 0.01%)</title><rect x="992.4" y="165" width="0.2" height="15.0" fill="rgb(209,116,18)" rx="2" ry="2" />
<text  x="995.43" y="175.5" ></text>
</g>
<g >
<title>_start (37,192 samples, 99.81%)</title><rect x="12.1" y="469" width="1177.8" height="15.0" fill="rgb(233,185,54)" rx="2" ry="2" />
<text  x="15.09" y="479.5" >_start</text>
</g>
<g >
<title>all (37,262 samples, 100%)</title><rect x="10.0" y="501" width="1180.0" height="15.0" fill="rgb(254,39,1)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>ZSTD_hashPtr (668 samples, 1.79%)</title><rect x="962.9" y="197" width="21.2" height="15.0" fill="rgb(243,73,11)" rx="2" ry="2" />
<text  x="965.94" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;unsigned char, std::allocator&lt;unsigned char&gt; &gt;::_M_default_append (93 samples, 0.25%)</title><rect x="825.9" y="277" width="3.0" height="15.0" fill="rgb(236,72,21)" rx="2" ry="2" />
<text  x="828.92" y="287.5" ></text>
</g>
</g>
</svg>
